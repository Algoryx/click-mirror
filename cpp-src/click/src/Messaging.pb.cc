// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: Messaging.proto
// Protobuf C++ Version: 5.27.0

#include "Messaging.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace click {
namespace protobuf {

inline constexpr SensorRequestMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : messagetype_{static_cast< ::click::protobuf::MessageType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SensorRequestMessage::SensorRequestMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SensorRequestMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorRequestMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorRequestMessageDefaultTypeInternal() {}
  union {
    SensorRequestMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorRequestMessageDefaultTypeInternal _SensorRequestMessage_default_instance_;

inline constexpr SensorMessage_Vec3::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : arr_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SensorMessage_Vec3::SensorMessage_Vec3(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SensorMessage_Vec3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorMessage_Vec3DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorMessage_Vec3DefaultTypeInternal() {}
  union {
    SensorMessage_Vec3 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorMessage_Vec3DefaultTypeInternal _SensorMessage_Vec3_default_instance_;

inline constexpr SensorMessage_SimulationVariables::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : simulatedtime_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SensorMessage_SimulationVariables::SensorMessage_SimulationVariables(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SensorMessage_SimulationVariablesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorMessage_SimulationVariablesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorMessage_SimulationVariablesDefaultTypeInternal() {}
  union {
    SensorMessage_SimulationVariables _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorMessage_SimulationVariablesDefaultTypeInternal _SensorMessage_SimulationVariables_default_instance_;

inline constexpr ResetMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : messagetype_{static_cast< ::click::protobuf::MessageType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ResetMessage::ResetMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ResetMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResetMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResetMessageDefaultTypeInternal() {}
  union {
    ResetMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResetMessageDefaultTypeInternal _ResetMessage_default_instance_;

inline constexpr Message::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : messagetype_{static_cast< ::click::protobuf::MessageType >(0)},
        id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Message::Message(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageDefaultTypeInternal() {}
  union {
    Message _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageDefaultTypeInternal _Message_default_instance_;

inline constexpr HandshakeMessage_SimulationSettings::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : timestep_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HandshakeMessage_SimulationSettings::HandshakeMessage_SimulationSettings(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct HandshakeMessage_SimulationSettingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HandshakeMessage_SimulationSettingsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HandshakeMessage_SimulationSettingsDefaultTypeInternal() {}
  union {
    HandshakeMessage_SimulationSettings _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HandshakeMessage_SimulationSettingsDefaultTypeInternal _HandshakeMessage_SimulationSettings_default_instance_;

inline constexpr HandshakeMessage_Sensors::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : types_{},
        _types_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HandshakeMessage_Sensors::HandshakeMessage_Sensors(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct HandshakeMessage_SensorsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HandshakeMessage_SensorsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HandshakeMessage_SensorsDefaultTypeInternal() {}
  union {
    HandshakeMessage_Sensors _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HandshakeMessage_SensorsDefaultTypeInternal _HandshakeMessage_Sensors_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR HandshakeMessage_Object_ControlEventsEntry_DoNotUse::HandshakeMessage_Object_ControlEventsEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct HandshakeMessage_Object_ControlEventsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HandshakeMessage_Object_ControlEventsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HandshakeMessage_Object_ControlEventsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    HandshakeMessage_Object_ControlEventsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HandshakeMessage_Object_ControlEventsEntry_DoNotUseDefaultTypeInternal _HandshakeMessage_Object_ControlEventsEntry_DoNotUse_default_instance_;

inline constexpr HandshakeInitMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : messagetype_{static_cast< ::click::protobuf::MessageType >(0)},
        version_{static_cast< ::click::protobuf::Version >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HandshakeInitMessage::HandshakeInitMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct HandshakeInitMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HandshakeInitMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HandshakeInitMessageDefaultTypeInternal() {}
  union {
    HandshakeInitMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HandshakeInitMessageDefaultTypeInternal _HandshakeInitMessage_default_instance_;

inline constexpr ErrorMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : errormessage_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        messagetype_{static_cast< ::click::protobuf::MessageType >(0)},
        error_{static_cast< ::click::protobuf::ErrorType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ErrorMessage::ErrorMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ErrorMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ErrorMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ErrorMessageDefaultTypeInternal() {}
  union {
    ErrorMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ErrorMessageDefaultTypeInternal _ErrorMessage_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ControlMessage_Object_ControlEventsEntry_DoNotUse::ControlMessage_Object_ControlEventsEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct ControlMessage_Object_ControlEventsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ControlMessage_Object_ControlEventsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ControlMessage_Object_ControlEventsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ControlMessage_Object_ControlEventsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ControlMessage_Object_ControlEventsEntry_DoNotUseDefaultTypeInternal _ControlMessage_Object_ControlEventsEntry_DoNotUse_default_instance_;

inline constexpr SensorMessage_Sensor::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR SensorMessage_Sensor::SensorMessage_Sensor(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SensorMessage_SensorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorMessage_SensorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorMessage_SensorDefaultTypeInternal() {}
  union {
    SensorMessage_Sensor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorMessage_SensorDefaultTypeInternal _SensorMessage_Sensor_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR HandshakeMessage_Object_SensorsEntry_DoNotUse::HandshakeMessage_Object_SensorsEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct HandshakeMessage_Object_SensorsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HandshakeMessage_Object_SensorsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HandshakeMessage_Object_SensorsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    HandshakeMessage_Object_SensorsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HandshakeMessage_Object_SensorsEntry_DoNotUseDefaultTypeInternal _HandshakeMessage_Object_SensorsEntry_DoNotUse_default_instance_;

inline constexpr ControlMessage_Object::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : angles_{},
        angularvelocities_{},
        torques_{},
        controlevents_{},
        values_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ControlMessage_Object::ControlMessage_Object(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ControlMessage_ObjectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ControlMessage_ObjectDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ControlMessage_ObjectDefaultTypeInternal() {}
  union {
    ControlMessage_Object _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ControlMessage_ObjectDefaultTypeInternal _ControlMessage_Object_default_instance_;

inline constexpr SensorMessage_Sensors::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : sensor_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SensorMessage_Sensors::SensorMessage_Sensors(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SensorMessage_SensorsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorMessage_SensorsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorMessage_SensorsDefaultTypeInternal() {}
  union {
    SensorMessage_Sensors _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorMessage_SensorsDefaultTypeInternal _SensorMessage_Sensors_default_instance_;

inline constexpr HandshakeMessage_Object::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : controlsinorder_{},
        jointsensors_{},
        _jointsensors_cached_byte_size_{0},
        controlevents_{},
        sensors_{},
        objectsensors_{},
        _objectsensors_cached_byte_size_{0},
        jointsensorsinorder_{},
        controltypesinorder_{},
        _controltypesinorder_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HandshakeMessage_Object::HandshakeMessage_Object(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct HandshakeMessage_ObjectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HandshakeMessage_ObjectDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HandshakeMessage_ObjectDefaultTypeInternal() {}
  union {
    HandshakeMessage_Object _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HandshakeMessage_ObjectDefaultTypeInternal _HandshakeMessage_Object_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ControlMessage_ObjectsEntry_DoNotUse::ControlMessage_ObjectsEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct ControlMessage_ObjectsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ControlMessage_ObjectsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ControlMessage_ObjectsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ControlMessage_ObjectsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ControlMessage_ObjectsEntry_DoNotUseDefaultTypeInternal _ControlMessage_ObjectsEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SensorMessage_Object_SensorsEntry_DoNotUse::SensorMessage_Object_SensorsEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct SensorMessage_Object_SensorsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorMessage_Object_SensorsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorMessage_Object_SensorsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SensorMessage_Object_SensorsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorMessage_Object_SensorsEntry_DoNotUseDefaultTypeInternal _SensorMessage_Object_SensorsEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR HandshakeMessage_ObjectsEntry_DoNotUse::HandshakeMessage_ObjectsEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct HandshakeMessage_ObjectsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HandshakeMessage_ObjectsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HandshakeMessage_ObjectsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    HandshakeMessage_ObjectsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HandshakeMessage_ObjectsEntry_DoNotUseDefaultTypeInternal _HandshakeMessage_ObjectsEntry_DoNotUse_default_instance_;

inline constexpr ControlMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : objects_{},
        messagetype_{static_cast< ::click::protobuf::MessageType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ControlMessage::ControlMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ControlMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ControlMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ControlMessageDefaultTypeInternal() {}
  union {
    ControlMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ControlMessageDefaultTypeInternal _ControlMessage_default_instance_;

inline constexpr SensorMessage_Object::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : anglesensors_{},
        angularvelocitysensors_{},
        torquesensors_{},
        objectsensors_{},
        forcesensors_{},
        sensors_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SensorMessage_Object::SensorMessage_Object(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SensorMessage_ObjectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorMessage_ObjectDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorMessage_ObjectDefaultTypeInternal() {}
  union {
    SensorMessage_Object _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorMessage_ObjectDefaultTypeInternal _SensorMessage_Object_default_instance_;

inline constexpr HandshakeMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        objects_{},
        simsettings_{nullptr},
        messagetype_{static_cast< ::click::protobuf::MessageType >(0)},
        version_{static_cast< ::click::protobuf::Version >(0)},
        controltype_{static_cast< ::click::protobuf::ValueType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR HandshakeMessage::HandshakeMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct HandshakeMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HandshakeMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HandshakeMessageDefaultTypeInternal() {}
  union {
    HandshakeMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HandshakeMessageDefaultTypeInternal _HandshakeMessage_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SensorMessage_ObjectsEntry_DoNotUse::SensorMessage_ObjectsEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct SensorMessage_ObjectsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorMessage_ObjectsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorMessage_ObjectsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SensorMessage_ObjectsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorMessage_ObjectsEntry_DoNotUseDefaultTypeInternal _SensorMessage_ObjectsEntry_DoNotUse_default_instance_;

inline constexpr SensorMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        objects_{},
        simvars_{nullptr},
        messagetype_{static_cast< ::click::protobuf::MessageType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR SensorMessage::SensorMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SensorMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorMessageDefaultTypeInternal() {}
  union {
    SensorMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorMessageDefaultTypeInternal _SensorMessage_default_instance_;
}  // namespace protobuf
}  // namespace click
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_Messaging_2eproto[4];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_Messaging_2eproto = nullptr;
const ::uint32_t
    TableStruct_Messaging_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::click::protobuf::Message, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::click::protobuf::Message, _impl_.messagetype_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::Message, _impl_.id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::click::protobuf::HandshakeInitMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::click::protobuf::HandshakeInitMessage, _impl_.messagetype_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::HandshakeInitMessage, _impl_.version_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::click::protobuf::SensorRequestMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::click::protobuf::SensorRequestMessage, _impl_.messagetype_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::click::protobuf::HandshakeMessage_Sensors, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::click::protobuf::HandshakeMessage_Sensors, _impl_.types_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::HandshakeMessage_Object_ControlEventsEntry_DoNotUse, _has_bits_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::HandshakeMessage_Object_ControlEventsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::click::protobuf::HandshakeMessage_Object_ControlEventsEntry_DoNotUse, key_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::HandshakeMessage_Object_ControlEventsEntry_DoNotUse, value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::click::protobuf::HandshakeMessage_Object_SensorsEntry_DoNotUse, _has_bits_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::HandshakeMessage_Object_SensorsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::click::protobuf::HandshakeMessage_Object_SensorsEntry_DoNotUse, key_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::HandshakeMessage_Object_SensorsEntry_DoNotUse, value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::click::protobuf::HandshakeMessage_Object, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::click::protobuf::HandshakeMessage_Object, _impl_.controlsinorder_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::HandshakeMessage_Object, _impl_.controltypesinorder_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::HandshakeMessage_Object, _impl_.jointsensorsinorder_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::HandshakeMessage_Object, _impl_.jointsensors_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::HandshakeMessage_Object, _impl_.controlevents_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::HandshakeMessage_Object, _impl_.sensors_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::HandshakeMessage_Object, _impl_.objectsensors_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::click::protobuf::HandshakeMessage_SimulationSettings, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::click::protobuf::HandshakeMessage_SimulationSettings, _impl_.timestep_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::HandshakeMessage_ObjectsEntry_DoNotUse, _has_bits_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::HandshakeMessage_ObjectsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::click::protobuf::HandshakeMessage_ObjectsEntry_DoNotUse, key_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::HandshakeMessage_ObjectsEntry_DoNotUse, value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::click::protobuf::HandshakeMessage, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::HandshakeMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::click::protobuf::HandshakeMessage, _impl_.messagetype_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::HandshakeMessage, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::HandshakeMessage, _impl_.controltype_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::HandshakeMessage, _impl_.objects_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::HandshakeMessage, _impl_.simsettings_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::click::protobuf::ControlMessage_Object_ControlEventsEntry_DoNotUse, _has_bits_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::ControlMessage_Object_ControlEventsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::click::protobuf::ControlMessage_Object_ControlEventsEntry_DoNotUse, key_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::ControlMessage_Object_ControlEventsEntry_DoNotUse, value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::click::protobuf::ControlMessage_Object, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::click::protobuf::ControlMessage_Object, _impl_.angles_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::ControlMessage_Object, _impl_.angularvelocities_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::ControlMessage_Object, _impl_.torques_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::ControlMessage_Object, _impl_.values_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::ControlMessage_Object, _impl_.controlevents_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::ControlMessage_ObjectsEntry_DoNotUse, _has_bits_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::ControlMessage_ObjectsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::click::protobuf::ControlMessage_ObjectsEntry_DoNotUse, key_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::ControlMessage_ObjectsEntry_DoNotUse, value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::click::protobuf::ControlMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::click::protobuf::ControlMessage, _impl_.messagetype_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::ControlMessage, _impl_.objects_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::click::protobuf::SensorMessage_Vec3, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::click::protobuf::SensorMessage_Vec3, _impl_.arr_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::click::protobuf::SensorMessage_Sensor, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::click::protobuf::SensorMessage_Sensor, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::click::protobuf::SensorMessage_Sensor, _impl_.value_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::click::protobuf::SensorMessage_Sensors, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::click::protobuf::SensorMessage_Sensors, _impl_.sensor_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::SensorMessage_Object_SensorsEntry_DoNotUse, _has_bits_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::SensorMessage_Object_SensorsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::click::protobuf::SensorMessage_Object_SensorsEntry_DoNotUse, key_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::SensorMessage_Object_SensorsEntry_DoNotUse, value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::click::protobuf::SensorMessage_Object, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::click::protobuf::SensorMessage_Object, _impl_.anglesensors_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::SensorMessage_Object, _impl_.angularvelocitysensors_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::SensorMessage_Object, _impl_.torquesensors_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::SensorMessage_Object, _impl_.forcesensors_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::SensorMessage_Object, _impl_.objectsensors_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::SensorMessage_Object, _impl_.sensors_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::click::protobuf::SensorMessage_SimulationVariables, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::click::protobuf::SensorMessage_SimulationVariables, _impl_.simulatedtime_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::SensorMessage_ObjectsEntry_DoNotUse, _has_bits_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::SensorMessage_ObjectsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::click::protobuf::SensorMessage_ObjectsEntry_DoNotUse, key_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::SensorMessage_ObjectsEntry_DoNotUse, value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::click::protobuf::SensorMessage, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::SensorMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::click::protobuf::SensorMessage, _impl_.messagetype_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::SensorMessage, _impl_.objects_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::SensorMessage, _impl_.simvars_),
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::click::protobuf::ResetMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::click::protobuf::ResetMessage, _impl_.messagetype_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::click::protobuf::ErrorMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::click::protobuf::ErrorMessage, _impl_.messagetype_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::ErrorMessage, _impl_.error_),
        PROTOBUF_FIELD_OFFSET(::click::protobuf::ErrorMessage, _impl_.errormessage_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::click::protobuf::Message)},
        {10, -1, -1, sizeof(::click::protobuf::HandshakeInitMessage)},
        {20, -1, -1, sizeof(::click::protobuf::SensorRequestMessage)},
        {29, -1, -1, sizeof(::click::protobuf::HandshakeMessage_Sensors)},
        {38, 48, -1, sizeof(::click::protobuf::HandshakeMessage_Object_ControlEventsEntry_DoNotUse)},
        {50, 60, -1, sizeof(::click::protobuf::HandshakeMessage_Object_SensorsEntry_DoNotUse)},
        {62, -1, -1, sizeof(::click::protobuf::HandshakeMessage_Object)},
        {77, -1, -1, sizeof(::click::protobuf::HandshakeMessage_SimulationSettings)},
        {86, 96, -1, sizeof(::click::protobuf::HandshakeMessage_ObjectsEntry_DoNotUse)},
        {98, 111, -1, sizeof(::click::protobuf::HandshakeMessage)},
        {116, 126, -1, sizeof(::click::protobuf::ControlMessage_Object_ControlEventsEntry_DoNotUse)},
        {128, -1, -1, sizeof(::click::protobuf::ControlMessage_Object)},
        {141, 151, -1, sizeof(::click::protobuf::ControlMessage_ObjectsEntry_DoNotUse)},
        {153, -1, -1, sizeof(::click::protobuf::ControlMessage)},
        {163, -1, -1, sizeof(::click::protobuf::SensorMessage_Vec3)},
        {172, -1, -1, sizeof(::click::protobuf::SensorMessage_Sensor)},
        {194, -1, -1, sizeof(::click::protobuf::SensorMessage_Sensors)},
        {203, 213, -1, sizeof(::click::protobuf::SensorMessage_Object_SensorsEntry_DoNotUse)},
        {215, -1, -1, sizeof(::click::protobuf::SensorMessage_Object)},
        {229, -1, -1, sizeof(::click::protobuf::SensorMessage_SimulationVariables)},
        {238, 248, -1, sizeof(::click::protobuf::SensorMessage_ObjectsEntry_DoNotUse)},
        {250, 261, -1, sizeof(::click::protobuf::SensorMessage)},
        {264, -1, -1, sizeof(::click::protobuf::ResetMessage)},
        {273, -1, -1, sizeof(::click::protobuf::ErrorMessage)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::click::protobuf::_Message_default_instance_._instance,
    &::click::protobuf::_HandshakeInitMessage_default_instance_._instance,
    &::click::protobuf::_SensorRequestMessage_default_instance_._instance,
    &::click::protobuf::_HandshakeMessage_Sensors_default_instance_._instance,
    &::click::protobuf::_HandshakeMessage_Object_ControlEventsEntry_DoNotUse_default_instance_._instance,
    &::click::protobuf::_HandshakeMessage_Object_SensorsEntry_DoNotUse_default_instance_._instance,
    &::click::protobuf::_HandshakeMessage_Object_default_instance_._instance,
    &::click::protobuf::_HandshakeMessage_SimulationSettings_default_instance_._instance,
    &::click::protobuf::_HandshakeMessage_ObjectsEntry_DoNotUse_default_instance_._instance,
    &::click::protobuf::_HandshakeMessage_default_instance_._instance,
    &::click::protobuf::_ControlMessage_Object_ControlEventsEntry_DoNotUse_default_instance_._instance,
    &::click::protobuf::_ControlMessage_Object_default_instance_._instance,
    &::click::protobuf::_ControlMessage_ObjectsEntry_DoNotUse_default_instance_._instance,
    &::click::protobuf::_ControlMessage_default_instance_._instance,
    &::click::protobuf::_SensorMessage_Vec3_default_instance_._instance,
    &::click::protobuf::_SensorMessage_Sensor_default_instance_._instance,
    &::click::protobuf::_SensorMessage_Sensors_default_instance_._instance,
    &::click::protobuf::_SensorMessage_Object_SensorsEntry_DoNotUse_default_instance_._instance,
    &::click::protobuf::_SensorMessage_Object_default_instance_._instance,
    &::click::protobuf::_SensorMessage_SimulationVariables_default_instance_._instance,
    &::click::protobuf::_SensorMessage_ObjectsEntry_DoNotUse_default_instance_._instance,
    &::click::protobuf::_SensorMessage_default_instance_._instance,
    &::click::protobuf::_ResetMessage_default_instance_._instance,
    &::click::protobuf::_ErrorMessage_default_instance_._instance,
};
const char descriptor_table_protodef_Messaging_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\017Messaging.proto\022\016click.protobuf\"G\n\007Mes"
    "sage\0220\n\013messageType\030\001 \001(\0162\033.click.protob"
    "uf.MessageType\022\n\n\002id\030\002 \001(\005\"r\n\024HandshakeI"
    "nitMessage\0220\n\013messageType\030\001 \001(\0162\033.click."
    "protobuf.MessageType\022(\n\007version\030\002 \001(\0162\027."
    "click.protobuf.Version\"H\n\024SensorRequestM"
    "essage\0220\n\013messageType\030\001 \001(\0162\033.click.prot"
    "obuf.MessageType\"\377\007\n\020HandshakeMessage\0220\n"
    "\013messageType\030\001 \001(\0162\033.click.protobuf.Mess"
    "ageType\022(\n\007version\030\002 \001(\0162\027.click.protobu"
    "f.Version\022.\n\013controlType\030\003 \001(\0162\031.click.p"
    "rotobuf.ValueType\022>\n\007objects\030\004 \003(\0132-.cli"
    "ck.protobuf.HandshakeMessage.ObjectsEntr"
    "y\022H\n\013simSettings\030\005 \001(\01323.click.protobuf."
    "HandshakeMessage.SimulationSettings\0323\n\007S"
    "ensors\022(\n\005types\030\001 \003(\0162\031.click.protobuf.V"
    "alueType\032\236\004\n\006Object\022\027\n\017controlsInOrder\030\001"
    " \003(\t\0226\n\023controlTypesInOrder\030\010 \003(\0162\031.clic"
    "k.protobuf.ValueType\022\033\n\023jointSensorsInOr"
    "der\030\007 \003(\t\022/\n\014jointSensors\030\002 \003(\0162\031.click."
    "protobuf.ValueType\022Q\n\rcontrolEvents\030\003 \003("
    "\0132:.click.protobuf.HandshakeMessage.Obje"
    "ct.ControlEventsEntry\022E\n\007sensors\030\004 \003(\01324"
    ".click.protobuf.HandshakeMessage.Object."
    "SensorsEntry\0220\n\robjectSensors\030\006 \003(\0162\031.cl"
    "ick.protobuf.ValueType\032O\n\022ControlEventsE"
    "ntry\022\013\n\003key\030\001 \001(\t\022(\n\005value\030\002 \001(\0162\031.click"
    ".protobuf.ValueType:\0028\001\032X\n\014SensorsEntry\022"
    "\013\n\003key\030\001 \001(\t\0227\n\005value\030\002 \001(\0132(.click.prot"
    "obuf.HandshakeMessage.Sensors:\0028\001\032&\n\022Sim"
    "ulationSettings\022\020\n\010timeStep\030\001 \001(\001\032W\n\014Obj"
    "ectsEntry\022\013\n\003key\030\001 \001(\t\0226\n\005value\030\002 \001(\0132\'."
    "click.protobuf.HandshakeMessage.Object:\002"
    "8\001\"\265\003\n\016ControlMessage\0220\n\013messageType\030\001 \001"
    "(\0162\033.click.protobuf.MessageType\022<\n\007objec"
    "ts\030\002 \003(\0132+.click.protobuf.ControlMessage"
    ".ObjectsEntry\032\333\001\n\006Object\022\016\n\006angles\030\001 \003(\001"
    "\022\031\n\021angularVelocities\030\002 \003(\001\022\017\n\007torques\030\003"
    " \003(\001\022\016\n\006values\030\005 \003(\001\022O\n\rcontrolEvents\030\004 "
    "\003(\01328.click.protobuf.ControlMessage.Obje"
    "ct.ControlEventsEntry\0324\n\022ControlEventsEn"
    "try\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\010:\0028\001\032U\n\014O"
    "bjectsEntry\022\013\n\003key\030\001 \001(\t\0224\n\005value\030\002 \001(\0132"
    "%.click.protobuf.ControlMessage.Object:\002"
    "8\001\"\334\n\n\rSensorMessage\0220\n\013messageType\030\001 \001("
    "\0162\033.click.protobuf.MessageType\022;\n\007object"
    "s\030\003 \003(\0132*.click.protobuf.SensorMessage.O"
    "bjectsEntry\022B\n\007simVars\030\004 \001(\01321.click.pro"
    "tobuf.SensorMessage.SimulationVariables\032"
    "\023\n\004Vec3\022\013\n\003arr\030\001 \003(\001\032\323\004\n\006Sensor\022\017\n\005angle"
    "\030\001 \001(\001H\000\022\033\n\021angularVelocity1d\030\002 \001(\001H\000\022\022\n"
    "\010torque1d\030\003 \001(\001H\000\0226\n\010position\030\004 \001(\0132\".cl"
    "ick.protobuf.SensorMessage.Vec3H\000\0221\n\003rpy"
    "\030\005 \001(\0132\".click.protobuf.SensorMessage.Ve"
    "c3H\000\022\023\n\tactivated\030\006 \001(\010H\000\022<\n\016acceleratio"
    "n3d\030\007 \001(\0132\".click.protobuf.SensorMessage"
    ".Vec3H\000\0225\n\007force3d\030\010 \001(\0132\".click.protobu"
    "f.SensorMessage.Vec3H\000\0226\n\010torque3d\030\t \001(\013"
    "2\".click.protobuf.SensorMessage.Vec3H\000\022C"
    "\n\025angularAcceleration3d\030\n \001(\0132\".click.pr"
    "otobuf.SensorMessage.Vec3H\000\0228\n\nvelocity3"
    "d\030\014 \001(\0132\".click.protobuf.SensorMessage.V"
    "ec3H\000\022\?\n\021angularVelocity3d\030\r \001(\0132\".click"
    ".protobuf.SensorMessage.Vec3H\000\022\021\n\007force1"
    "d\030\016 \001(\001H\000B\007\n\005value\032\?\n\007Sensors\0224\n\006sensor\030"
    "\001 \003(\0132$.click.protobuf.SensorMessage.Sen"
    "sor\032\347\002\n\006Object\022\024\n\014angleSensors\030\001 \003(\001\022\036\n\026"
    "angularVelocitySensors\030\002 \003(\001\022\025\n\rtorqueSe"
    "nsors\030\003 \003(\001\0228\n\014forceSensors\030\005 \003(\0132\".clic"
    "k.protobuf.SensorMessage.Vec3\022;\n\robjectS"
    "ensors\030\004 \003(\0132$.click.protobuf.SensorMess"
    "age.Sensor\022B\n\007sensors\030\006 \003(\01321.click.prot"
    "obuf.SensorMessage.Object.SensorsEntry\032U"
    "\n\014SensorsEntry\022\013\n\003key\030\001 \001(\t\0224\n\005value\030\002 \001"
    "(\0132%.click.protobuf.SensorMessage.Sensor"
    "s:\0028\001\032,\n\023SimulationVariables\022\025\n\rsimulate"
    "dTime\030\001 \001(\001\032T\n\014ObjectsEntry\022\013\n\003key\030\001 \001(\t"
    "\0223\n\005value\030\002 \001(\0132$.click.protobuf.SensorM"
    "essage.Object:\0028\001\"@\n\014ResetMessage\0220\n\013mes"
    "sageType\030\001 \001(\0162\033.click.protobuf.MessageT"
    "ype\"\200\001\n\014ErrorMessage\0220\n\013messageType\030\001 \001("
    "\0162\033.click.protobuf.MessageType\022(\n\005error\030"
    "\002 \001(\0162\031.click.protobuf.ErrorType\022\024\n\014erro"
    "rmessage\030\003 \001(\t*\276\001\n\013MessageType\022\034\n\030Handsh"
    "akeInitMessageType\020\000\022\030\n\024HandshakeMessage"
    "Type\020\001\022\034\n\030SensorRequestMessageType\020\006\022\026\n\022"
    "ControlMessageType\020\002\022\025\n\021SensorMessageTyp"
    "e\020\003\022\024\n\020ResetMessageType\020\004\022\024\n\020ErrorMessag"
    "eType\020\005*\355\001\n\tValueType\022\t\n\005Angle\020\000\022\025\n\021Angu"
    "larVelocity1D\020\001\022\014\n\010Torque1D\020\002\022\014\n\010Positio"
    "n\020\003\022\007\n\003RPY\020\004\022\r\n\tActivated\020\005\022\022\n\016Accelerat"
    "ion3D\020\006\022\013\n\007Force1D\020\014\022\013\n\007Force3D\020\007\022\014\n\010Tor"
    "que3D\020\010\022\031\n\025AngularAcceleration3D\020\t\022\016\n\nVe"
    "locity3D\020\n\022\025\n\021AngularVelocity3D\020\013\022\014\n\010Mul"
    "tiple\020\017*-\n\007Version\022\r\n\tUNDEFINED\020\000\022\023\n\017CUR"
    "RENT_VERSION\020\001*$\n\tErrorType\022\027\n\023VersionNo"
    "tSupported\020\000b\006proto3"
};
static ::absl::once_flag descriptor_table_Messaging_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_Messaging_2eproto = {
    false,
    false,
    3860,
    descriptor_table_protodef_Messaging_2eproto,
    "Messaging.proto",
    &descriptor_table_Messaging_2eproto_once,
    nullptr,
    0,
    24,
    schemas,
    file_default_instances,
    TableStruct_Messaging_2eproto::offsets,
    file_level_enum_descriptors_Messaging_2eproto,
    file_level_service_descriptors_Messaging_2eproto,
};
namespace click {
namespace protobuf {
const ::google::protobuf::EnumDescriptor* MessageType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_Messaging_2eproto);
  return file_level_enum_descriptors_Messaging_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t MessageType_internal_data_[] = {
    458752u, 0u, };
bool MessageType_IsValid(int value) {
  return 0 <= value && value <= 6;
}
const ::google::protobuf::EnumDescriptor* ValueType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_Messaging_2eproto);
  return file_level_enum_descriptors_Messaging_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t ValueType_internal_data_[] = {
    851968u, 32u, 4u, };
bool ValueType_IsValid(int value) {
  return 0 <= value && value <= 15 && ((40959u >> value) & 1) != 0;
}
const ::google::protobuf::EnumDescriptor* Version_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_Messaging_2eproto);
  return file_level_enum_descriptors_Messaging_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t Version_internal_data_[] = {
    131072u, 0u, };
bool Version_IsValid(int value) {
  return 0 <= value && value <= 1;
}
const ::google::protobuf::EnumDescriptor* ErrorType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_Messaging_2eproto);
  return file_level_enum_descriptors_Messaging_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t ErrorType_internal_data_[] = {
    65536u, 0u, };
bool ErrorType_IsValid(int value) {
  return 0 <= value && value <= 0;
}
// ===================================================================

class Message::_Internal {
 public:
};

Message::Message(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:click.protobuf.Message)
}
Message::Message(
    ::google::protobuf::Arena* arena, const Message& from)
    : Message(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, messagetype_),
           0,
           offsetof(Impl_, id_) -
               offsetof(Impl_, messagetype_) +
               sizeof(Impl_::id_));
}
Message::~Message() {
  // @@protoc_insertion_point(destructor:click.protobuf.Message)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Message, _impl_._cached_size_),
              false,
          },
          &Message::MergeImpl,
          &Message::kDescriptorMethods,
          &descriptor_table_Messaging_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Message::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Message_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::click::protobuf::Message>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Message, _impl_.id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Message, _impl_.id_)}},
    // .click.protobuf.MessageType messageType = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Message, _impl_.messagetype_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Message, _impl_.messagetype_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .click.protobuf.MessageType messageType = 1;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.messagetype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int32 id = 2;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:click.protobuf.Message)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.messagetype_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.id_) -
      reinterpret_cast<char*>(&_impl_.messagetype_)) + sizeof(_impl_.id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Message::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:click.protobuf.Message)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .click.protobuf.MessageType messageType = 1;
  if (this->_internal_messagetype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_messagetype(), target);
  }

  // int32 id = 2;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:click.protobuf.Message)
  return target;
}

::size_t Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:click.protobuf.Message)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // .click.protobuf.MessageType messageType = 1;
  if (this->_internal_messagetype() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_messagetype());
  }

  // int32 id = 2;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message*>(&to_msg);
  auto& from = static_cast<const Message&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:click.protobuf.Message)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_messagetype() != 0) {
    _this->_impl_.messagetype_ = from._impl_.messagetype_;
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:click.protobuf.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Message::InternalSwap(Message* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message, _impl_.id_)
      + sizeof(Message::_impl_.id_)
      - PROTOBUF_FIELD_OFFSET(Message, _impl_.messagetype_)>(
          reinterpret_cast<char*>(&_impl_.messagetype_),
          reinterpret_cast<char*>(&other->_impl_.messagetype_));
}

::google::protobuf::Metadata Message::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HandshakeInitMessage::_Internal {
 public:
};

HandshakeInitMessage::HandshakeInitMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:click.protobuf.HandshakeInitMessage)
}
HandshakeInitMessage::HandshakeInitMessage(
    ::google::protobuf::Arena* arena, const HandshakeInitMessage& from)
    : HandshakeInitMessage(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE HandshakeInitMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void HandshakeInitMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, messagetype_),
           0,
           offsetof(Impl_, version_) -
               offsetof(Impl_, messagetype_) +
               sizeof(Impl_::version_));
}
HandshakeInitMessage::~HandshakeInitMessage() {
  // @@protoc_insertion_point(destructor:click.protobuf.HandshakeInitMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void HandshakeInitMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
HandshakeInitMessage::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(HandshakeInitMessage, _impl_._cached_size_),
              false,
          },
          &HandshakeInitMessage::MergeImpl,
          &HandshakeInitMessage::kDescriptorMethods,
          &descriptor_table_Messaging_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> HandshakeInitMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_HandshakeInitMessage_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::click::protobuf::HandshakeInitMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .click.protobuf.Version version = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HandshakeInitMessage, _impl_.version_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(HandshakeInitMessage, _impl_.version_)}},
    // .click.protobuf.MessageType messageType = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HandshakeInitMessage, _impl_.messagetype_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(HandshakeInitMessage, _impl_.messagetype_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .click.protobuf.MessageType messageType = 1;
    {PROTOBUF_FIELD_OFFSET(HandshakeInitMessage, _impl_.messagetype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .click.protobuf.Version version = 2;
    {PROTOBUF_FIELD_OFFSET(HandshakeInitMessage, _impl_.version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void HandshakeInitMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:click.protobuf.HandshakeInitMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.messagetype_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.version_) -
      reinterpret_cast<char*>(&_impl_.messagetype_)) + sizeof(_impl_.version_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* HandshakeInitMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:click.protobuf.HandshakeInitMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .click.protobuf.MessageType messageType = 1;
  if (this->_internal_messagetype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_messagetype(), target);
  }

  // .click.protobuf.Version version = 2;
  if (this->_internal_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:click.protobuf.HandshakeInitMessage)
  return target;
}

::size_t HandshakeInitMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:click.protobuf.HandshakeInitMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // .click.protobuf.MessageType messageType = 1;
  if (this->_internal_messagetype() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_messagetype());
  }

  // .click.protobuf.Version version = 2;
  if (this->_internal_version() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void HandshakeInitMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HandshakeInitMessage*>(&to_msg);
  auto& from = static_cast<const HandshakeInitMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:click.protobuf.HandshakeInitMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_messagetype() != 0) {
    _this->_impl_.messagetype_ = from._impl_.messagetype_;
  }
  if (from._internal_version() != 0) {
    _this->_impl_.version_ = from._impl_.version_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HandshakeInitMessage::CopyFrom(const HandshakeInitMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:click.protobuf.HandshakeInitMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HandshakeInitMessage::InternalSwap(HandshakeInitMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HandshakeInitMessage, _impl_.version_)
      + sizeof(HandshakeInitMessage::_impl_.version_)
      - PROTOBUF_FIELD_OFFSET(HandshakeInitMessage, _impl_.messagetype_)>(
          reinterpret_cast<char*>(&_impl_.messagetype_),
          reinterpret_cast<char*>(&other->_impl_.messagetype_));
}

::google::protobuf::Metadata HandshakeInitMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SensorRequestMessage::_Internal {
 public:
};

SensorRequestMessage::SensorRequestMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:click.protobuf.SensorRequestMessage)
}
SensorRequestMessage::SensorRequestMessage(
    ::google::protobuf::Arena* arena, const SensorRequestMessage& from)
    : SensorRequestMessage(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SensorRequestMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SensorRequestMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.messagetype_ = {};
}
SensorRequestMessage::~SensorRequestMessage() {
  // @@protoc_insertion_point(destructor:click.protobuf.SensorRequestMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SensorRequestMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SensorRequestMessage::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SensorRequestMessage, _impl_._cached_size_),
              false,
          },
          &SensorRequestMessage::MergeImpl,
          &SensorRequestMessage::kDescriptorMethods,
          &descriptor_table_Messaging_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SensorRequestMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SensorRequestMessage_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::click::protobuf::SensorRequestMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .click.protobuf.MessageType messageType = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorRequestMessage, _impl_.messagetype_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SensorRequestMessage, _impl_.messagetype_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .click.protobuf.MessageType messageType = 1;
    {PROTOBUF_FIELD_OFFSET(SensorRequestMessage, _impl_.messagetype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SensorRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:click.protobuf.SensorRequestMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.messagetype_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SensorRequestMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:click.protobuf.SensorRequestMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .click.protobuf.MessageType messageType = 1;
  if (this->_internal_messagetype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_messagetype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:click.protobuf.SensorRequestMessage)
  return target;
}

::size_t SensorRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:click.protobuf.SensorRequestMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .click.protobuf.MessageType messageType = 1;
  if (this->_internal_messagetype() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_messagetype());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SensorRequestMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SensorRequestMessage*>(&to_msg);
  auto& from = static_cast<const SensorRequestMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:click.protobuf.SensorRequestMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_messagetype() != 0) {
    _this->_impl_.messagetype_ = from._impl_.messagetype_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorRequestMessage::CopyFrom(const SensorRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:click.protobuf.SensorRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SensorRequestMessage::InternalSwap(SensorRequestMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.messagetype_, other->_impl_.messagetype_);
}

::google::protobuf::Metadata SensorRequestMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HandshakeMessage_Sensors::_Internal {
 public:
};

HandshakeMessage_Sensors::HandshakeMessage_Sensors(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:click.protobuf.HandshakeMessage.Sensors)
}
inline PROTOBUF_NDEBUG_INLINE HandshakeMessage_Sensors::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::click::protobuf::HandshakeMessage_Sensors& from_msg)
      : types_{visibility, arena, from.types_},
        _types_cached_byte_size_{0},
        _cached_size_{0} {}

HandshakeMessage_Sensors::HandshakeMessage_Sensors(
    ::google::protobuf::Arena* arena,
    const HandshakeMessage_Sensors& from)
    : ::google::protobuf::Message(arena) {
  HandshakeMessage_Sensors* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:click.protobuf.HandshakeMessage.Sensors)
}
inline PROTOBUF_NDEBUG_INLINE HandshakeMessage_Sensors::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : types_{visibility, arena},
        _types_cached_byte_size_{0},
        _cached_size_{0} {}

inline void HandshakeMessage_Sensors::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
HandshakeMessage_Sensors::~HandshakeMessage_Sensors() {
  // @@protoc_insertion_point(destructor:click.protobuf.HandshakeMessage.Sensors)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void HandshakeMessage_Sensors::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
HandshakeMessage_Sensors::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(HandshakeMessage_Sensors, _impl_._cached_size_),
              false,
          },
          &HandshakeMessage_Sensors::MergeImpl,
          &HandshakeMessage_Sensors::kDescriptorMethods,
          &descriptor_table_Messaging_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> HandshakeMessage_Sensors::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_HandshakeMessage_Sensors_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::click::protobuf::HandshakeMessage_Sensors>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .click.protobuf.ValueType types = 1;
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(HandshakeMessage_Sensors, _impl_.types_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .click.protobuf.ValueType types = 1;
    {PROTOBUF_FIELD_OFFSET(HandshakeMessage_Sensors, _impl_.types_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void HandshakeMessage_Sensors::Clear() {
// @@protoc_insertion_point(message_clear_start:click.protobuf.HandshakeMessage.Sensors)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.types_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* HandshakeMessage_Sensors::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:click.protobuf.HandshakeMessage.Sensors)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .click.protobuf.ValueType types = 1;
  {
    std::size_t byte_size = _impl_._types_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(1, _internal_types(),
                                       byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:click.protobuf.HandshakeMessage.Sensors)
  return target;
}

::size_t HandshakeMessage_Sensors::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:click.protobuf.HandshakeMessage.Sensors)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .click.protobuf.ValueType types = 1;
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_types_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_types().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 1;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._types_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void HandshakeMessage_Sensors::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HandshakeMessage_Sensors*>(&to_msg);
  auto& from = static_cast<const HandshakeMessage_Sensors&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:click.protobuf.HandshakeMessage.Sensors)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_types()->MergeFrom(from._internal_types());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HandshakeMessage_Sensors::CopyFrom(const HandshakeMessage_Sensors& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:click.protobuf.HandshakeMessage.Sensors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HandshakeMessage_Sensors::InternalSwap(HandshakeMessage_Sensors* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.types_.InternalSwap(&other->_impl_.types_);
}

::google::protobuf::Metadata HandshakeMessage_Sensors::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

HandshakeMessage_Object_ControlEventsEntry_DoNotUse::HandshakeMessage_Object_ControlEventsEntry_DoNotUse() {}
HandshakeMessage_Object_ControlEventsEntry_DoNotUse::HandshakeMessage_Object_ControlEventsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
const ::google::protobuf::MessageLite::ClassData*
HandshakeMessage_Object_ControlEventsEntry_DoNotUse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // tc_table
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(HandshakeMessage_Object_ControlEventsEntry_DoNotUse, _cached_size_),
              false,
          },
          &HandshakeMessage_Object_ControlEventsEntry_DoNotUse::MergeImpl,
          &HandshakeMessage_Object_ControlEventsEntry_DoNotUse::kDescriptorMethods,
          &descriptor_table_Messaging_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
// ===================================================================

HandshakeMessage_Object_SensorsEntry_DoNotUse::HandshakeMessage_Object_SensorsEntry_DoNotUse() {}
HandshakeMessage_Object_SensorsEntry_DoNotUse::HandshakeMessage_Object_SensorsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
const ::google::protobuf::MessageLite::ClassData*
HandshakeMessage_Object_SensorsEntry_DoNotUse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // tc_table
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(HandshakeMessage_Object_SensorsEntry_DoNotUse, _cached_size_),
              false,
          },
          &HandshakeMessage_Object_SensorsEntry_DoNotUse::MergeImpl,
          &HandshakeMessage_Object_SensorsEntry_DoNotUse::kDescriptorMethods,
          &descriptor_table_Messaging_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
// ===================================================================

class HandshakeMessage_Object::_Internal {
 public:
};

HandshakeMessage_Object::HandshakeMessage_Object(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:click.protobuf.HandshakeMessage.Object)
}
inline PROTOBUF_NDEBUG_INLINE HandshakeMessage_Object::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::click::protobuf::HandshakeMessage_Object& from_msg)
      : controlsinorder_{visibility, arena, from.controlsinorder_},
        jointsensors_{visibility, arena, from.jointsensors_},
        _jointsensors_cached_byte_size_{0},
        controlevents_{visibility, arena, from.controlevents_},
        sensors_{visibility, arena, from.sensors_},
        objectsensors_{visibility, arena, from.objectsensors_},
        _objectsensors_cached_byte_size_{0},
        jointsensorsinorder_{visibility, arena, from.jointsensorsinorder_},
        controltypesinorder_{visibility, arena, from.controltypesinorder_},
        _controltypesinorder_cached_byte_size_{0},
        _cached_size_{0} {}

HandshakeMessage_Object::HandshakeMessage_Object(
    ::google::protobuf::Arena* arena,
    const HandshakeMessage_Object& from)
    : ::google::protobuf::Message(arena) {
  HandshakeMessage_Object* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:click.protobuf.HandshakeMessage.Object)
}
inline PROTOBUF_NDEBUG_INLINE HandshakeMessage_Object::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : controlsinorder_{visibility, arena},
        jointsensors_{visibility, arena},
        _jointsensors_cached_byte_size_{0},
        controlevents_{visibility, arena},
        sensors_{visibility, arena},
        objectsensors_{visibility, arena},
        _objectsensors_cached_byte_size_{0},
        jointsensorsinorder_{visibility, arena},
        controltypesinorder_{visibility, arena},
        _controltypesinorder_cached_byte_size_{0},
        _cached_size_{0} {}

inline void HandshakeMessage_Object::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
HandshakeMessage_Object::~HandshakeMessage_Object() {
  // @@protoc_insertion_point(destructor:click.protobuf.HandshakeMessage.Object)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void HandshakeMessage_Object::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
HandshakeMessage_Object::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(HandshakeMessage_Object, _impl_._cached_size_),
              false,
          },
          &HandshakeMessage_Object::MergeImpl,
          &HandshakeMessage_Object::kDescriptorMethods,
          &descriptor_table_Messaging_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 3, 101, 2> HandshakeMessage_Object::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967056,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_HandshakeMessage_Object_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::click::protobuf::HandshakeMessage_Object>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .click.protobuf.ValueType controlTypesInOrder = 8;
    {::_pbi::TcParser::FastV32P1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(HandshakeMessage_Object, _impl_.controltypesinorder_)}},
    // repeated string controlsInOrder = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(HandshakeMessage_Object, _impl_.controlsinorder_)}},
    // repeated .click.protobuf.ValueType jointSensors = 2;
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(HandshakeMessage_Object, _impl_.jointsensors_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .click.protobuf.ValueType objectSensors = 6;
    {::_pbi::TcParser::FastV32P1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(HandshakeMessage_Object, _impl_.objectsensors_)}},
    // repeated string jointSensorsInOrder = 7;
    {::_pbi::TcParser::FastUR1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(HandshakeMessage_Object, _impl_.jointsensorsinorder_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string controlsInOrder = 1;
    {PROTOBUF_FIELD_OFFSET(HandshakeMessage_Object, _impl_.controlsinorder_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated .click.protobuf.ValueType jointSensors = 2;
    {PROTOBUF_FIELD_OFFSET(HandshakeMessage_Object, _impl_.jointsensors_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // map<string, .click.protobuf.ValueType> controlEvents = 3;
    {PROTOBUF_FIELD_OFFSET(HandshakeMessage_Object, _impl_.controlevents_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, .click.protobuf.HandshakeMessage.Sensors> sensors = 4;
    {PROTOBUF_FIELD_OFFSET(HandshakeMessage_Object, _impl_.sensors_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // repeated .click.protobuf.ValueType objectSensors = 6;
    {PROTOBUF_FIELD_OFFSET(HandshakeMessage_Object, _impl_.objectsensors_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // repeated string jointSensorsInOrder = 7;
    {PROTOBUF_FIELD_OFFSET(HandshakeMessage_Object, _impl_.jointsensorsinorder_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated .click.protobuf.ValueType controlTypesInOrder = 8;
    {PROTOBUF_FIELD_OFFSET(HandshakeMessage_Object, _impl_.controltypesinorder_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(HandshakeMessage_Object()._impl_.controlevents_)>(
        1, 0, 0, 9,
        14)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(HandshakeMessage_Object()._impl_.sensors_)>(
        1, 0, 0, 9,
        11)},
    {::_pbi::TcParser::CreateInArenaStorageCb<::click::protobuf::HandshakeMessage_Sensors>},
  }}, {{
    "\46\17\0\15\7\0\23\0"
    "click.protobuf.HandshakeMessage.Object"
    "controlsInOrder"
    "controlEvents"
    "sensors"
    "jointSensorsInOrder"
  }},
};

PROTOBUF_NOINLINE void HandshakeMessage_Object::Clear() {
// @@protoc_insertion_point(message_clear_start:click.protobuf.HandshakeMessage.Object)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.controlsinorder_.Clear();
  _impl_.jointsensors_.Clear();
  _impl_.controlevents_.Clear();
  _impl_.sensors_.Clear();
  _impl_.objectsensors_.Clear();
  _impl_.jointsensorsinorder_.Clear();
  _impl_.controltypesinorder_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* HandshakeMessage_Object::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:click.protobuf.HandshakeMessage.Object)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string controlsInOrder = 1;
  for (int i = 0, n = this->_internal_controlsinorder_size(); i < n; ++i) {
    const auto& s = this->_internal_controlsinorder().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "click.protobuf.HandshakeMessage.Object.controlsInOrder");
    target = stream->WriteString(1, s, target);
  }

  // repeated .click.protobuf.ValueType jointSensors = 2;
  {
    std::size_t byte_size = _impl_._jointsensors_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(2, _internal_jointsensors(),
                                       byte_size, target);
    }
  }

  // map<string, .click.protobuf.ValueType> controlEvents = 3;
  if (!_internal_controlevents().empty()) {
    using MapType = ::google::protobuf::Map<std::string, ::click::protobuf::ValueType>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, ::click::protobuf::ValueType,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_ENUM>;
    const auto& field = _internal_controlevents();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "click.protobuf.HandshakeMessage.Object.controlEvents");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "click.protobuf.HandshakeMessage.Object.controlEvents");
      }
    }
  }

  // map<string, .click.protobuf.HandshakeMessage.Sensors> sensors = 4;
  if (!_internal_sensors().empty()) {
    using MapType = ::google::protobuf::Map<std::string, ::click::protobuf::HandshakeMessage_Sensors>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, ::click::protobuf::HandshakeMessage_Sensors,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>;
    const auto& field = _internal_sensors();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "click.protobuf.HandshakeMessage.Object.sensors");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "click.protobuf.HandshakeMessage.Object.sensors");
      }
    }
  }

  // repeated .click.protobuf.ValueType objectSensors = 6;
  {
    std::size_t byte_size = _impl_._objectsensors_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(6, _internal_objectsensors(),
                                       byte_size, target);
    }
  }

  // repeated string jointSensorsInOrder = 7;
  for (int i = 0, n = this->_internal_jointsensorsinorder_size(); i < n; ++i) {
    const auto& s = this->_internal_jointsensorsinorder().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "click.protobuf.HandshakeMessage.Object.jointSensorsInOrder");
    target = stream->WriteString(7, s, target);
  }

  // repeated .click.protobuf.ValueType controlTypesInOrder = 8;
  {
    std::size_t byte_size = _impl_._controltypesinorder_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(8, _internal_controltypesinorder(),
                                       byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:click.protobuf.HandshakeMessage.Object)
  return target;
}

::size_t HandshakeMessage_Object::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:click.protobuf.HandshakeMessage.Object)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated string controlsInOrder = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_controlsinorder().size());
  for (int i = 0, n = _internal_controlsinorder().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_controlsinorder().Get(i));
  }
  // repeated .click.protobuf.ValueType jointSensors = 2;
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_jointsensors_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_jointsensors().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 1;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._jointsensors_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }
  // map<string, .click.protobuf.ValueType> controlEvents = 3;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_controlevents_size());
  for (const auto& entry : _internal_controlevents()) {
    total_size += _pbi::MapEntryFuncs<std::string, ::click::protobuf::ValueType,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_ENUM>::ByteSizeLong(entry.first, entry.second);
  }
  // map<string, .click.protobuf.HandshakeMessage.Sensors> sensors = 4;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_sensors_size());
  for (const auto& entry : _internal_sensors()) {
    total_size += _pbi::MapEntryFuncs<std::string, ::click::protobuf::HandshakeMessage_Sensors,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
  }
  // repeated .click.protobuf.ValueType objectSensors = 6;
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_objectsensors_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_objectsensors().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 1;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._objectsensors_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }
  // repeated string jointSensorsInOrder = 7;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_jointsensorsinorder().size());
  for (int i = 0, n = _internal_jointsensorsinorder().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_jointsensorsinorder().Get(i));
  }
  // repeated .click.protobuf.ValueType controlTypesInOrder = 8;
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_controltypesinorder_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_controltypesinorder().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 1;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._controltypesinorder_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void HandshakeMessage_Object::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HandshakeMessage_Object*>(&to_msg);
  auto& from = static_cast<const HandshakeMessage_Object&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:click.protobuf.HandshakeMessage.Object)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_controlsinorder()->MergeFrom(from._internal_controlsinorder());
  _this->_internal_mutable_jointsensors()->MergeFrom(from._internal_jointsensors());
  _this->_impl_.controlevents_.MergeFrom(from._impl_.controlevents_);
  _this->_impl_.sensors_.MergeFrom(from._impl_.sensors_);
  _this->_internal_mutable_objectsensors()->MergeFrom(from._internal_objectsensors());
  _this->_internal_mutable_jointsensorsinorder()->MergeFrom(from._internal_jointsensorsinorder());
  _this->_internal_mutable_controltypesinorder()->MergeFrom(from._internal_controltypesinorder());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HandshakeMessage_Object::CopyFrom(const HandshakeMessage_Object& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:click.protobuf.HandshakeMessage.Object)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HandshakeMessage_Object::InternalSwap(HandshakeMessage_Object* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.controlsinorder_.InternalSwap(&other->_impl_.controlsinorder_);
  _impl_.jointsensors_.InternalSwap(&other->_impl_.jointsensors_);
  _impl_.controlevents_.InternalSwap(&other->_impl_.controlevents_);
  _impl_.sensors_.InternalSwap(&other->_impl_.sensors_);
  _impl_.objectsensors_.InternalSwap(&other->_impl_.objectsensors_);
  _impl_.jointsensorsinorder_.InternalSwap(&other->_impl_.jointsensorsinorder_);
  _impl_.controltypesinorder_.InternalSwap(&other->_impl_.controltypesinorder_);
}

::google::protobuf::Metadata HandshakeMessage_Object::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HandshakeMessage_SimulationSettings::_Internal {
 public:
};

HandshakeMessage_SimulationSettings::HandshakeMessage_SimulationSettings(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:click.protobuf.HandshakeMessage.SimulationSettings)
}
HandshakeMessage_SimulationSettings::HandshakeMessage_SimulationSettings(
    ::google::protobuf::Arena* arena, const HandshakeMessage_SimulationSettings& from)
    : HandshakeMessage_SimulationSettings(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE HandshakeMessage_SimulationSettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void HandshakeMessage_SimulationSettings::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.timestep_ = {};
}
HandshakeMessage_SimulationSettings::~HandshakeMessage_SimulationSettings() {
  // @@protoc_insertion_point(destructor:click.protobuf.HandshakeMessage.SimulationSettings)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void HandshakeMessage_SimulationSettings::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
HandshakeMessage_SimulationSettings::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(HandshakeMessage_SimulationSettings, _impl_._cached_size_),
              false,
          },
          &HandshakeMessage_SimulationSettings::MergeImpl,
          &HandshakeMessage_SimulationSettings::kDescriptorMethods,
          &descriptor_table_Messaging_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> HandshakeMessage_SimulationSettings::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_HandshakeMessage_SimulationSettings_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::click::protobuf::HandshakeMessage_SimulationSettings>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double timeStep = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(HandshakeMessage_SimulationSettings, _impl_.timestep_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double timeStep = 1;
    {PROTOBUF_FIELD_OFFSET(HandshakeMessage_SimulationSettings, _impl_.timestep_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void HandshakeMessage_SimulationSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:click.protobuf.HandshakeMessage.SimulationSettings)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.timestep_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* HandshakeMessage_SimulationSettings::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:click.protobuf.HandshakeMessage.SimulationSettings)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double timeStep = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_timestep = this->_internal_timestep();
  ::uint64_t raw_timestep;
  memcpy(&raw_timestep, &tmp_timestep, sizeof(tmp_timestep));
  if (raw_timestep != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_timestep(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:click.protobuf.HandshakeMessage.SimulationSettings)
  return target;
}

::size_t HandshakeMessage_SimulationSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:click.protobuf.HandshakeMessage.SimulationSettings)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double timeStep = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_timestep = this->_internal_timestep();
  ::uint64_t raw_timestep;
  memcpy(&raw_timestep, &tmp_timestep, sizeof(tmp_timestep));
  if (raw_timestep != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void HandshakeMessage_SimulationSettings::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HandshakeMessage_SimulationSettings*>(&to_msg);
  auto& from = static_cast<const HandshakeMessage_SimulationSettings&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:click.protobuf.HandshakeMessage.SimulationSettings)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_timestep = from._internal_timestep();
  ::uint64_t raw_timestep;
  memcpy(&raw_timestep, &tmp_timestep, sizeof(tmp_timestep));
  if (raw_timestep != 0) {
    _this->_impl_.timestep_ = from._impl_.timestep_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HandshakeMessage_SimulationSettings::CopyFrom(const HandshakeMessage_SimulationSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:click.protobuf.HandshakeMessage.SimulationSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HandshakeMessage_SimulationSettings::InternalSwap(HandshakeMessage_SimulationSettings* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.timestep_, other->_impl_.timestep_);
}

::google::protobuf::Metadata HandshakeMessage_SimulationSettings::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

HandshakeMessage_ObjectsEntry_DoNotUse::HandshakeMessage_ObjectsEntry_DoNotUse() {}
HandshakeMessage_ObjectsEntry_DoNotUse::HandshakeMessage_ObjectsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
const ::google::protobuf::MessageLite::ClassData*
HandshakeMessage_ObjectsEntry_DoNotUse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // tc_table
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(HandshakeMessage_ObjectsEntry_DoNotUse, _cached_size_),
              false,
          },
          &HandshakeMessage_ObjectsEntry_DoNotUse::MergeImpl,
          &HandshakeMessage_ObjectsEntry_DoNotUse::kDescriptorMethods,
          &descriptor_table_Messaging_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
// ===================================================================

class HandshakeMessage::_Internal {
 public:
  using HasBits =
      decltype(std::declval<HandshakeMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HandshakeMessage, _impl_._has_bits_);
};

HandshakeMessage::HandshakeMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:click.protobuf.HandshakeMessage)
}
inline PROTOBUF_NDEBUG_INLINE HandshakeMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::click::protobuf::HandshakeMessage& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        objects_{visibility, arena, from.objects_} {}

HandshakeMessage::HandshakeMessage(
    ::google::protobuf::Arena* arena,
    const HandshakeMessage& from)
    : ::google::protobuf::Message(arena) {
  HandshakeMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.simsettings_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::click::protobuf::HandshakeMessage_SimulationSettings>(
                              arena, *from._impl_.simsettings_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, messagetype_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, messagetype_),
           offsetof(Impl_, controltype_) -
               offsetof(Impl_, messagetype_) +
               sizeof(Impl_::controltype_));

  // @@protoc_insertion_point(copy_constructor:click.protobuf.HandshakeMessage)
}
inline PROTOBUF_NDEBUG_INLINE HandshakeMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        objects_{visibility, arena} {}

inline void HandshakeMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, simsettings_),
           0,
           offsetof(Impl_, controltype_) -
               offsetof(Impl_, simsettings_) +
               sizeof(Impl_::controltype_));
}
HandshakeMessage::~HandshakeMessage() {
  // @@protoc_insertion_point(destructor:click.protobuf.HandshakeMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void HandshakeMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.simsettings_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
HandshakeMessage::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(HandshakeMessage, _impl_._cached_size_),
              false,
          },
          &HandshakeMessage::MergeImpl,
          &HandshakeMessage::kDescriptorMethods,
          &descriptor_table_Messaging_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 3, 47, 2> HandshakeMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HandshakeMessage, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_HandshakeMessage_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::click::protobuf::HandshakeMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .click.protobuf.MessageType messageType = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HandshakeMessage, _impl_.messagetype_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(HandshakeMessage, _impl_.messagetype_)}},
    // .click.protobuf.Version version = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HandshakeMessage, _impl_.version_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(HandshakeMessage, _impl_.version_)}},
    // .click.protobuf.ValueType controlType = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HandshakeMessage, _impl_.controltype_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(HandshakeMessage, _impl_.controltype_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .click.protobuf.HandshakeMessage.SimulationSettings simSettings = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(HandshakeMessage, _impl_.simsettings_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .click.protobuf.MessageType messageType = 1;
    {PROTOBUF_FIELD_OFFSET(HandshakeMessage, _impl_.messagetype_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .click.protobuf.Version version = 2;
    {PROTOBUF_FIELD_OFFSET(HandshakeMessage, _impl_.version_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .click.protobuf.ValueType controlType = 3;
    {PROTOBUF_FIELD_OFFSET(HandshakeMessage, _impl_.controltype_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // map<string, .click.protobuf.HandshakeMessage.Object> objects = 4;
    {PROTOBUF_FIELD_OFFSET(HandshakeMessage, _impl_.objects_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // .click.protobuf.HandshakeMessage.SimulationSettings simSettings = 5;
    {PROTOBUF_FIELD_OFFSET(HandshakeMessage, _impl_.simsettings_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::click::protobuf::HandshakeMessage_SimulationSettings>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(HandshakeMessage()._impl_.objects_)>(
        1, 0, 0, 9,
        11)},
    {::_pbi::TcParser::CreateInArenaStorageCb<::click::protobuf::HandshakeMessage_Object>},
  }}, {{
    "\37\0\0\0\7\0\0\0"
    "click.protobuf.HandshakeMessage"
    "objects"
  }},
};

PROTOBUF_NOINLINE void HandshakeMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:click.protobuf.HandshakeMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.objects_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.simsettings_ != nullptr);
    _impl_.simsettings_->Clear();
  }
  ::memset(&_impl_.messagetype_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.controltype_) -
      reinterpret_cast<char*>(&_impl_.messagetype_)) + sizeof(_impl_.controltype_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* HandshakeMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:click.protobuf.HandshakeMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .click.protobuf.MessageType messageType = 1;
  if (this->_internal_messagetype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_messagetype(), target);
  }

  // .click.protobuf.Version version = 2;
  if (this->_internal_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_version(), target);
  }

  // .click.protobuf.ValueType controlType = 3;
  if (this->_internal_controltype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_controltype(), target);
  }

  // map<string, .click.protobuf.HandshakeMessage.Object> objects = 4;
  if (!_internal_objects().empty()) {
    using MapType = ::google::protobuf::Map<std::string, ::click::protobuf::HandshakeMessage_Object>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, ::click::protobuf::HandshakeMessage_Object,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>;
    const auto& field = _internal_objects();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "click.protobuf.HandshakeMessage.objects");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "click.protobuf.HandshakeMessage.objects");
      }
    }
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .click.protobuf.HandshakeMessage.SimulationSettings simSettings = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.simsettings_, _impl_.simsettings_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:click.protobuf.HandshakeMessage)
  return target;
}

::size_t HandshakeMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:click.protobuf.HandshakeMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // map<string, .click.protobuf.HandshakeMessage.Object> objects = 4;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_objects_size());
  for (const auto& entry : _internal_objects()) {
    total_size += _pbi::MapEntryFuncs<std::string, ::click::protobuf::HandshakeMessage_Object,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
  }
  // .click.protobuf.HandshakeMessage.SimulationSettings simSettings = 5;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.simsettings_);
  }

  // .click.protobuf.MessageType messageType = 1;
  if (this->_internal_messagetype() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_messagetype());
  }

  // .click.protobuf.Version version = 2;
  if (this->_internal_version() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_version());
  }

  // .click.protobuf.ValueType controlType = 3;
  if (this->_internal_controltype() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_controltype());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void HandshakeMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HandshakeMessage*>(&to_msg);
  auto& from = static_cast<const HandshakeMessage&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:click.protobuf.HandshakeMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.objects_.MergeFrom(from._impl_.objects_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.simsettings_ != nullptr);
    if (_this->_impl_.simsettings_ == nullptr) {
      _this->_impl_.simsettings_ =
          ::google::protobuf::Message::CopyConstruct<::click::protobuf::HandshakeMessage_SimulationSettings>(arena, *from._impl_.simsettings_);
    } else {
      _this->_impl_.simsettings_->MergeFrom(*from._impl_.simsettings_);
    }
  }
  if (from._internal_messagetype() != 0) {
    _this->_impl_.messagetype_ = from._impl_.messagetype_;
  }
  if (from._internal_version() != 0) {
    _this->_impl_.version_ = from._impl_.version_;
  }
  if (from._internal_controltype() != 0) {
    _this->_impl_.controltype_ = from._impl_.controltype_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HandshakeMessage::CopyFrom(const HandshakeMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:click.protobuf.HandshakeMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HandshakeMessage::InternalSwap(HandshakeMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.objects_.InternalSwap(&other->_impl_.objects_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HandshakeMessage, _impl_.controltype_)
      + sizeof(HandshakeMessage::_impl_.controltype_)
      - PROTOBUF_FIELD_OFFSET(HandshakeMessage, _impl_.simsettings_)>(
          reinterpret_cast<char*>(&_impl_.simsettings_),
          reinterpret_cast<char*>(&other->_impl_.simsettings_));
}

::google::protobuf::Metadata HandshakeMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

ControlMessage_Object_ControlEventsEntry_DoNotUse::ControlMessage_Object_ControlEventsEntry_DoNotUse() {}
ControlMessage_Object_ControlEventsEntry_DoNotUse::ControlMessage_Object_ControlEventsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
const ::google::protobuf::MessageLite::ClassData*
ControlMessage_Object_ControlEventsEntry_DoNotUse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // tc_table
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(ControlMessage_Object_ControlEventsEntry_DoNotUse, _cached_size_),
              false,
          },
          &ControlMessage_Object_ControlEventsEntry_DoNotUse::MergeImpl,
          &ControlMessage_Object_ControlEventsEntry_DoNotUse::kDescriptorMethods,
          &descriptor_table_Messaging_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
// ===================================================================

class ControlMessage_Object::_Internal {
 public:
};

ControlMessage_Object::ControlMessage_Object(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:click.protobuf.ControlMessage.Object)
}
inline PROTOBUF_NDEBUG_INLINE ControlMessage_Object::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::click::protobuf::ControlMessage_Object& from_msg)
      : angles_{visibility, arena, from.angles_},
        angularvelocities_{visibility, arena, from.angularvelocities_},
        torques_{visibility, arena, from.torques_},
        controlevents_{visibility, arena, from.controlevents_},
        values_{visibility, arena, from.values_},
        _cached_size_{0} {}

ControlMessage_Object::ControlMessage_Object(
    ::google::protobuf::Arena* arena,
    const ControlMessage_Object& from)
    : ::google::protobuf::Message(arena) {
  ControlMessage_Object* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:click.protobuf.ControlMessage.Object)
}
inline PROTOBUF_NDEBUG_INLINE ControlMessage_Object::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : angles_{visibility, arena},
        angularvelocities_{visibility, arena},
        torques_{visibility, arena},
        controlevents_{visibility, arena},
        values_{visibility, arena},
        _cached_size_{0} {}

inline void ControlMessage_Object::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ControlMessage_Object::~ControlMessage_Object() {
  // @@protoc_insertion_point(destructor:click.protobuf.ControlMessage.Object)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ControlMessage_Object::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ControlMessage_Object::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(ControlMessage_Object, _impl_._cached_size_),
              false,
          },
          &ControlMessage_Object::MergeImpl,
          &ControlMessage_Object::kDescriptorMethods,
          &descriptor_table_Messaging_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 58, 2> ControlMessage_Object::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ControlMessage_Object_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::click::protobuf::ControlMessage_Object>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated double angles = 1;
    {::_pbi::TcParser::FastF64P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ControlMessage_Object, _impl_.angles_)}},
    // repeated double angularVelocities = 2;
    {::_pbi::TcParser::FastF64P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ControlMessage_Object, _impl_.angularvelocities_)}},
    // repeated double torques = 3;
    {::_pbi::TcParser::FastF64P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ControlMessage_Object, _impl_.torques_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated double values = 5;
    {::_pbi::TcParser::FastF64P1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(ControlMessage_Object, _impl_.values_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated double angles = 1;
    {PROTOBUF_FIELD_OFFSET(ControlMessage_Object, _impl_.angles_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated double angularVelocities = 2;
    {PROTOBUF_FIELD_OFFSET(ControlMessage_Object, _impl_.angularvelocities_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated double torques = 3;
    {PROTOBUF_FIELD_OFFSET(ControlMessage_Object, _impl_.torques_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // map<string, bool> controlEvents = 4;
    {PROTOBUF_FIELD_OFFSET(ControlMessage_Object, _impl_.controlevents_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // repeated double values = 5;
    {PROTOBUF_FIELD_OFFSET(ControlMessage_Object, _impl_.values_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ControlMessage_Object()._impl_.controlevents_)>(
        1, 0, 0, 9,
        8)},
  }}, {{
    "\44\0\0\0\15\0\0\0"
    "click.protobuf.ControlMessage.Object"
    "controlEvents"
  }},
};

PROTOBUF_NOINLINE void ControlMessage_Object::Clear() {
// @@protoc_insertion_point(message_clear_start:click.protobuf.ControlMessage.Object)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.angles_.Clear();
  _impl_.angularvelocities_.Clear();
  _impl_.torques_.Clear();
  _impl_.controlevents_.Clear();
  _impl_.values_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* ControlMessage_Object::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:click.protobuf.ControlMessage.Object)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated double angles = 1;
  if (this->_internal_angles_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_angles(), target);
  }

  // repeated double angularVelocities = 2;
  if (this->_internal_angularvelocities_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_angularvelocities(), target);
  }

  // repeated double torques = 3;
  if (this->_internal_torques_size() > 0) {
    target = stream->WriteFixedPacked(3, _internal_torques(), target);
  }

  // map<string, bool> controlEvents = 4;
  if (!_internal_controlevents().empty()) {
    using MapType = ::google::protobuf::Map<std::string, bool>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, bool,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_BOOL>;
    const auto& field = _internal_controlevents();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "click.protobuf.ControlMessage.Object.controlEvents");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "click.protobuf.ControlMessage.Object.controlEvents");
      }
    }
  }

  // repeated double values = 5;
  if (this->_internal_values_size() > 0) {
    target = stream->WriteFixedPacked(5, _internal_values(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:click.protobuf.ControlMessage.Object)
  return target;
}

::size_t ControlMessage_Object::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:click.protobuf.ControlMessage.Object)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated double angles = 1;
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_angles_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double angularVelocities = 2;
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_angularvelocities_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double torques = 3;
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_torques_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // map<string, bool> controlEvents = 4;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_controlevents_size());
  for (const auto& entry : _internal_controlevents()) {
    total_size += _pbi::MapEntryFuncs<std::string, bool,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_BOOL>::ByteSizeLong(entry.first, entry.second);
  }
  // repeated double values = 5;
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_values_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ControlMessage_Object::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ControlMessage_Object*>(&to_msg);
  auto& from = static_cast<const ControlMessage_Object&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:click.protobuf.ControlMessage.Object)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_angles()->MergeFrom(from._internal_angles());
  _this->_internal_mutable_angularvelocities()->MergeFrom(from._internal_angularvelocities());
  _this->_internal_mutable_torques()->MergeFrom(from._internal_torques());
  _this->_impl_.controlevents_.MergeFrom(from._impl_.controlevents_);
  _this->_internal_mutable_values()->MergeFrom(from._internal_values());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ControlMessage_Object::CopyFrom(const ControlMessage_Object& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:click.protobuf.ControlMessage.Object)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ControlMessage_Object::InternalSwap(ControlMessage_Object* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.angles_.InternalSwap(&other->_impl_.angles_);
  _impl_.angularvelocities_.InternalSwap(&other->_impl_.angularvelocities_);
  _impl_.torques_.InternalSwap(&other->_impl_.torques_);
  _impl_.controlevents_.InternalSwap(&other->_impl_.controlevents_);
  _impl_.values_.InternalSwap(&other->_impl_.values_);
}

::google::protobuf::Metadata ControlMessage_Object::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

ControlMessage_ObjectsEntry_DoNotUse::ControlMessage_ObjectsEntry_DoNotUse() {}
ControlMessage_ObjectsEntry_DoNotUse::ControlMessage_ObjectsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
const ::google::protobuf::MessageLite::ClassData*
ControlMessage_ObjectsEntry_DoNotUse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // tc_table
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(ControlMessage_ObjectsEntry_DoNotUse, _cached_size_),
              false,
          },
          &ControlMessage_ObjectsEntry_DoNotUse::MergeImpl,
          &ControlMessage_ObjectsEntry_DoNotUse::kDescriptorMethods,
          &descriptor_table_Messaging_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
// ===================================================================

class ControlMessage::_Internal {
 public:
};

ControlMessage::ControlMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:click.protobuf.ControlMessage)
}
inline PROTOBUF_NDEBUG_INLINE ControlMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::click::protobuf::ControlMessage& from_msg)
      : objects_{visibility, arena, from.objects_},
        _cached_size_{0} {}

ControlMessage::ControlMessage(
    ::google::protobuf::Arena* arena,
    const ControlMessage& from)
    : ::google::protobuf::Message(arena) {
  ControlMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.messagetype_ = from._impl_.messagetype_;

  // @@protoc_insertion_point(copy_constructor:click.protobuf.ControlMessage)
}
inline PROTOBUF_NDEBUG_INLINE ControlMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : objects_{visibility, arena},
        _cached_size_{0} {}

inline void ControlMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.messagetype_ = {};
}
ControlMessage::~ControlMessage() {
  // @@protoc_insertion_point(destructor:click.protobuf.ControlMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ControlMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ControlMessage::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(ControlMessage, _impl_._cached_size_),
              false,
          },
          &ControlMessage::MergeImpl,
          &ControlMessage::kDescriptorMethods,
          &descriptor_table_Messaging_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 45, 2> ControlMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ControlMessage_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::click::protobuf::ControlMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .click.protobuf.MessageType messageType = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ControlMessage, _impl_.messagetype_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ControlMessage, _impl_.messagetype_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .click.protobuf.MessageType messageType = 1;
    {PROTOBUF_FIELD_OFFSET(ControlMessage, _impl_.messagetype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // map<string, .click.protobuf.ControlMessage.Object> objects = 2;
    {PROTOBUF_FIELD_OFFSET(ControlMessage, _impl_.objects_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ControlMessage()._impl_.objects_)>(
        1, 0, 0, 9,
        11)},
    {::_pbi::TcParser::CreateInArenaStorageCb<::click::protobuf::ControlMessage_Object>},
  }}, {{
    "\35\0\7\0\0\0\0\0"
    "click.protobuf.ControlMessage"
    "objects"
  }},
};

PROTOBUF_NOINLINE void ControlMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:click.protobuf.ControlMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.objects_.Clear();
  _impl_.messagetype_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* ControlMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:click.protobuf.ControlMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .click.protobuf.MessageType messageType = 1;
  if (this->_internal_messagetype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_messagetype(), target);
  }

  // map<string, .click.protobuf.ControlMessage.Object> objects = 2;
  if (!_internal_objects().empty()) {
    using MapType = ::google::protobuf::Map<std::string, ::click::protobuf::ControlMessage_Object>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, ::click::protobuf::ControlMessage_Object,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>;
    const auto& field = _internal_objects();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "click.protobuf.ControlMessage.objects");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "click.protobuf.ControlMessage.objects");
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:click.protobuf.ControlMessage)
  return target;
}

::size_t ControlMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:click.protobuf.ControlMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // map<string, .click.protobuf.ControlMessage.Object> objects = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_objects_size());
  for (const auto& entry : _internal_objects()) {
    total_size += _pbi::MapEntryFuncs<std::string, ::click::protobuf::ControlMessage_Object,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
  }
  // .click.protobuf.MessageType messageType = 1;
  if (this->_internal_messagetype() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_messagetype());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ControlMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ControlMessage*>(&to_msg);
  auto& from = static_cast<const ControlMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:click.protobuf.ControlMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.objects_.MergeFrom(from._impl_.objects_);
  if (from._internal_messagetype() != 0) {
    _this->_impl_.messagetype_ = from._impl_.messagetype_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ControlMessage::CopyFrom(const ControlMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:click.protobuf.ControlMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ControlMessage::InternalSwap(ControlMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.objects_.InternalSwap(&other->_impl_.objects_);
  swap(_impl_.messagetype_, other->_impl_.messagetype_);
}

::google::protobuf::Metadata ControlMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SensorMessage_Vec3::_Internal {
 public:
};

SensorMessage_Vec3::SensorMessage_Vec3(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:click.protobuf.SensorMessage.Vec3)
}
inline PROTOBUF_NDEBUG_INLINE SensorMessage_Vec3::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::click::protobuf::SensorMessage_Vec3& from_msg)
      : arr_{visibility, arena, from.arr_},
        _cached_size_{0} {}

SensorMessage_Vec3::SensorMessage_Vec3(
    ::google::protobuf::Arena* arena,
    const SensorMessage_Vec3& from)
    : ::google::protobuf::Message(arena) {
  SensorMessage_Vec3* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:click.protobuf.SensorMessage.Vec3)
}
inline PROTOBUF_NDEBUG_INLINE SensorMessage_Vec3::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : arr_{visibility, arena},
        _cached_size_{0} {}

inline void SensorMessage_Vec3::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SensorMessage_Vec3::~SensorMessage_Vec3() {
  // @@protoc_insertion_point(destructor:click.protobuf.SensorMessage.Vec3)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SensorMessage_Vec3::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SensorMessage_Vec3::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SensorMessage_Vec3, _impl_._cached_size_),
              false,
          },
          &SensorMessage_Vec3::MergeImpl,
          &SensorMessage_Vec3::kDescriptorMethods,
          &descriptor_table_Messaging_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SensorMessage_Vec3::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SensorMessage_Vec3_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::click::protobuf::SensorMessage_Vec3>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated double arr = 1;
    {::_pbi::TcParser::FastF64P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SensorMessage_Vec3, _impl_.arr_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated double arr = 1;
    {PROTOBUF_FIELD_OFFSET(SensorMessage_Vec3, _impl_.arr_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SensorMessage_Vec3::Clear() {
// @@protoc_insertion_point(message_clear_start:click.protobuf.SensorMessage.Vec3)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.arr_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SensorMessage_Vec3::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:click.protobuf.SensorMessage.Vec3)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated double arr = 1;
  if (this->_internal_arr_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_arr(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:click.protobuf.SensorMessage.Vec3)
  return target;
}

::size_t SensorMessage_Vec3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:click.protobuf.SensorMessage.Vec3)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated double arr = 1;
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_arr_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SensorMessage_Vec3::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SensorMessage_Vec3*>(&to_msg);
  auto& from = static_cast<const SensorMessage_Vec3&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:click.protobuf.SensorMessage.Vec3)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_arr()->MergeFrom(from._internal_arr());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorMessage_Vec3::CopyFrom(const SensorMessage_Vec3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:click.protobuf.SensorMessage.Vec3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SensorMessage_Vec3::InternalSwap(SensorMessage_Vec3* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.arr_.InternalSwap(&other->_impl_.arr_);
}

::google::protobuf::Metadata SensorMessage_Vec3::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SensorMessage_Sensor::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::click::protobuf::SensorMessage_Sensor, _impl_._oneof_case_);
};

void SensorMessage_Sensor::set_allocated_position(::click::protobuf::SensorMessage_Vec3* position) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (position) {
    ::google::protobuf::Arena* submessage_arena = position->GetArena();
    if (message_arena != submessage_arena) {
      position = ::google::protobuf::internal::GetOwnedMessage(message_arena, position, submessage_arena);
    }
    set_has_position();
    _impl_.value_.position_ = position;
  }
  // @@protoc_insertion_point(field_set_allocated:click.protobuf.SensorMessage.Sensor.position)
}
void SensorMessage_Sensor::set_allocated_rpy(::click::protobuf::SensorMessage_Vec3* rpy) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (rpy) {
    ::google::protobuf::Arena* submessage_arena = rpy->GetArena();
    if (message_arena != submessage_arena) {
      rpy = ::google::protobuf::internal::GetOwnedMessage(message_arena, rpy, submessage_arena);
    }
    set_has_rpy();
    _impl_.value_.rpy_ = rpy;
  }
  // @@protoc_insertion_point(field_set_allocated:click.protobuf.SensorMessage.Sensor.rpy)
}
void SensorMessage_Sensor::set_allocated_acceleration3d(::click::protobuf::SensorMessage_Vec3* acceleration3d) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (acceleration3d) {
    ::google::protobuf::Arena* submessage_arena = acceleration3d->GetArena();
    if (message_arena != submessage_arena) {
      acceleration3d = ::google::protobuf::internal::GetOwnedMessage(message_arena, acceleration3d, submessage_arena);
    }
    set_has_acceleration3d();
    _impl_.value_.acceleration3d_ = acceleration3d;
  }
  // @@protoc_insertion_point(field_set_allocated:click.protobuf.SensorMessage.Sensor.acceleration3d)
}
void SensorMessage_Sensor::set_allocated_force3d(::click::protobuf::SensorMessage_Vec3* force3d) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (force3d) {
    ::google::protobuf::Arena* submessage_arena = force3d->GetArena();
    if (message_arena != submessage_arena) {
      force3d = ::google::protobuf::internal::GetOwnedMessage(message_arena, force3d, submessage_arena);
    }
    set_has_force3d();
    _impl_.value_.force3d_ = force3d;
  }
  // @@protoc_insertion_point(field_set_allocated:click.protobuf.SensorMessage.Sensor.force3d)
}
void SensorMessage_Sensor::set_allocated_torque3d(::click::protobuf::SensorMessage_Vec3* torque3d) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (torque3d) {
    ::google::protobuf::Arena* submessage_arena = torque3d->GetArena();
    if (message_arena != submessage_arena) {
      torque3d = ::google::protobuf::internal::GetOwnedMessage(message_arena, torque3d, submessage_arena);
    }
    set_has_torque3d();
    _impl_.value_.torque3d_ = torque3d;
  }
  // @@protoc_insertion_point(field_set_allocated:click.protobuf.SensorMessage.Sensor.torque3d)
}
void SensorMessage_Sensor::set_allocated_angularacceleration3d(::click::protobuf::SensorMessage_Vec3* angularacceleration3d) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (angularacceleration3d) {
    ::google::protobuf::Arena* submessage_arena = angularacceleration3d->GetArena();
    if (message_arena != submessage_arena) {
      angularacceleration3d = ::google::protobuf::internal::GetOwnedMessage(message_arena, angularacceleration3d, submessage_arena);
    }
    set_has_angularacceleration3d();
    _impl_.value_.angularacceleration3d_ = angularacceleration3d;
  }
  // @@protoc_insertion_point(field_set_allocated:click.protobuf.SensorMessage.Sensor.angularAcceleration3d)
}
void SensorMessage_Sensor::set_allocated_velocity3d(::click::protobuf::SensorMessage_Vec3* velocity3d) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (velocity3d) {
    ::google::protobuf::Arena* submessage_arena = velocity3d->GetArena();
    if (message_arena != submessage_arena) {
      velocity3d = ::google::protobuf::internal::GetOwnedMessage(message_arena, velocity3d, submessage_arena);
    }
    set_has_velocity3d();
    _impl_.value_.velocity3d_ = velocity3d;
  }
  // @@protoc_insertion_point(field_set_allocated:click.protobuf.SensorMessage.Sensor.velocity3d)
}
void SensorMessage_Sensor::set_allocated_angularvelocity3d(::click::protobuf::SensorMessage_Vec3* angularvelocity3d) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (angularvelocity3d) {
    ::google::protobuf::Arena* submessage_arena = angularvelocity3d->GetArena();
    if (message_arena != submessage_arena) {
      angularvelocity3d = ::google::protobuf::internal::GetOwnedMessage(message_arena, angularvelocity3d, submessage_arena);
    }
    set_has_angularvelocity3d();
    _impl_.value_.angularvelocity3d_ = angularvelocity3d;
  }
  // @@protoc_insertion_point(field_set_allocated:click.protobuf.SensorMessage.Sensor.angularVelocity3d)
}
SensorMessage_Sensor::SensorMessage_Sensor(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:click.protobuf.SensorMessage.Sensor)
}
inline PROTOBUF_NDEBUG_INLINE SensorMessage_Sensor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::click::protobuf::SensorMessage_Sensor& from_msg)
      : value_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

SensorMessage_Sensor::SensorMessage_Sensor(
    ::google::protobuf::Arena* arena,
    const SensorMessage_Sensor& from)
    : ::google::protobuf::Message(arena) {
  SensorMessage_Sensor* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (value_case()) {
    case VALUE_NOT_SET:
      break;
      case kAngle:
        _impl_.value_.angle_ = from._impl_.value_.angle_;
        break;
      case kAngularVelocity1D:
        _impl_.value_.angularvelocity1d_ = from._impl_.value_.angularvelocity1d_;
        break;
      case kTorque1D:
        _impl_.value_.torque1d_ = from._impl_.value_.torque1d_;
        break;
      case kPosition:
        _impl_.value_.position_ = ::google::protobuf::Message::CopyConstruct<::click::protobuf::SensorMessage_Vec3>(arena, *from._impl_.value_.position_);
        break;
      case kRpy:
        _impl_.value_.rpy_ = ::google::protobuf::Message::CopyConstruct<::click::protobuf::SensorMessage_Vec3>(arena, *from._impl_.value_.rpy_);
        break;
      case kActivated:
        _impl_.value_.activated_ = from._impl_.value_.activated_;
        break;
      case kAcceleration3D:
        _impl_.value_.acceleration3d_ = ::google::protobuf::Message::CopyConstruct<::click::protobuf::SensorMessage_Vec3>(arena, *from._impl_.value_.acceleration3d_);
        break;
      case kForce3D:
        _impl_.value_.force3d_ = ::google::protobuf::Message::CopyConstruct<::click::protobuf::SensorMessage_Vec3>(arena, *from._impl_.value_.force3d_);
        break;
      case kTorque3D:
        _impl_.value_.torque3d_ = ::google::protobuf::Message::CopyConstruct<::click::protobuf::SensorMessage_Vec3>(arena, *from._impl_.value_.torque3d_);
        break;
      case kAngularAcceleration3D:
        _impl_.value_.angularacceleration3d_ = ::google::protobuf::Message::CopyConstruct<::click::protobuf::SensorMessage_Vec3>(arena, *from._impl_.value_.angularacceleration3d_);
        break;
      case kVelocity3D:
        _impl_.value_.velocity3d_ = ::google::protobuf::Message::CopyConstruct<::click::protobuf::SensorMessage_Vec3>(arena, *from._impl_.value_.velocity3d_);
        break;
      case kAngularVelocity3D:
        _impl_.value_.angularvelocity3d_ = ::google::protobuf::Message::CopyConstruct<::click::protobuf::SensorMessage_Vec3>(arena, *from._impl_.value_.angularvelocity3d_);
        break;
      case kForce1D:
        _impl_.value_.force1d_ = from._impl_.value_.force1d_;
        break;
  }

  // @@protoc_insertion_point(copy_constructor:click.protobuf.SensorMessage.Sensor)
}
inline PROTOBUF_NDEBUG_INLINE SensorMessage_Sensor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : value_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void SensorMessage_Sensor::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SensorMessage_Sensor::~SensorMessage_Sensor() {
  // @@protoc_insertion_point(destructor:click.protobuf.SensorMessage.Sensor)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SensorMessage_Sensor::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_value()) {
    clear_value();
  }
  _impl_.~Impl_();
}

void SensorMessage_Sensor::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:click.protobuf.SensorMessage.Sensor)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (value_case()) {
    case kAngle: {
      // No need to clear
      break;
    }
    case kAngularVelocity1D: {
      // No need to clear
      break;
    }
    case kTorque1D: {
      // No need to clear
      break;
    }
    case kPosition: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.position_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.position_);
      }
      break;
    }
    case kRpy: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.rpy_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.rpy_);
      }
      break;
    }
    case kActivated: {
      // No need to clear
      break;
    }
    case kAcceleration3D: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.acceleration3d_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.acceleration3d_);
      }
      break;
    }
    case kForce3D: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.force3d_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.force3d_);
      }
      break;
    }
    case kTorque3D: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.torque3d_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.torque3d_);
      }
      break;
    }
    case kAngularAcceleration3D: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.angularacceleration3d_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.angularacceleration3d_);
      }
      break;
    }
    case kVelocity3D: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.velocity3d_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.velocity3d_);
      }
      break;
    }
    case kAngularVelocity3D: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.angularvelocity3d_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.angularvelocity3d_);
      }
      break;
    }
    case kForce1D: {
      // No need to clear
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
SensorMessage_Sensor::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SensorMessage_Sensor, _impl_._cached_size_),
              false,
          },
          &SensorMessage_Sensor::MergeImpl,
          &SensorMessage_Sensor::kDescriptorMethods,
          &descriptor_table_Messaging_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 13, 8, 0, 2> SensorMessage_Sensor::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    14, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294951936,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    8,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SensorMessage_Sensor_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::click::protobuf::SensorMessage_Sensor>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // double angle = 1;
    {PROTOBUF_FIELD_OFFSET(SensorMessage_Sensor, _impl_.value_.angle_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kDouble)},
    // double angularVelocity1d = 2;
    {PROTOBUF_FIELD_OFFSET(SensorMessage_Sensor, _impl_.value_.angularvelocity1d_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kDouble)},
    // double torque1d = 3;
    {PROTOBUF_FIELD_OFFSET(SensorMessage_Sensor, _impl_.value_.torque1d_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kDouble)},
    // .click.protobuf.SensorMessage.Vec3 position = 4;
    {PROTOBUF_FIELD_OFFSET(SensorMessage_Sensor, _impl_.value_.position_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .click.protobuf.SensorMessage.Vec3 rpy = 5;
    {PROTOBUF_FIELD_OFFSET(SensorMessage_Sensor, _impl_.value_.rpy_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool activated = 6;
    {PROTOBUF_FIELD_OFFSET(SensorMessage_Sensor, _impl_.value_.activated_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBool)},
    // .click.protobuf.SensorMessage.Vec3 acceleration3d = 7;
    {PROTOBUF_FIELD_OFFSET(SensorMessage_Sensor, _impl_.value_.acceleration3d_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .click.protobuf.SensorMessage.Vec3 force3d = 8;
    {PROTOBUF_FIELD_OFFSET(SensorMessage_Sensor, _impl_.value_.force3d_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .click.protobuf.SensorMessage.Vec3 torque3d = 9;
    {PROTOBUF_FIELD_OFFSET(SensorMessage_Sensor, _impl_.value_.torque3d_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .click.protobuf.SensorMessage.Vec3 angularAcceleration3d = 10;
    {PROTOBUF_FIELD_OFFSET(SensorMessage_Sensor, _impl_.value_.angularacceleration3d_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .click.protobuf.SensorMessage.Vec3 velocity3d = 12;
    {PROTOBUF_FIELD_OFFSET(SensorMessage_Sensor, _impl_.value_.velocity3d_), _Internal::kOneofCaseOffset + 0, 6,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .click.protobuf.SensorMessage.Vec3 angularVelocity3d = 13;
    {PROTOBUF_FIELD_OFFSET(SensorMessage_Sensor, _impl_.value_.angularvelocity3d_), _Internal::kOneofCaseOffset + 0, 7,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // double force1d = 14;
    {PROTOBUF_FIELD_OFFSET(SensorMessage_Sensor, _impl_.value_.force1d_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kDouble)},
  }}, {{
    {::_pbi::TcParser::GetTable<::click::protobuf::SensorMessage_Vec3>()},
    {::_pbi::TcParser::GetTable<::click::protobuf::SensorMessage_Vec3>()},
    {::_pbi::TcParser::GetTable<::click::protobuf::SensorMessage_Vec3>()},
    {::_pbi::TcParser::GetTable<::click::protobuf::SensorMessage_Vec3>()},
    {::_pbi::TcParser::GetTable<::click::protobuf::SensorMessage_Vec3>()},
    {::_pbi::TcParser::GetTable<::click::protobuf::SensorMessage_Vec3>()},
    {::_pbi::TcParser::GetTable<::click::protobuf::SensorMessage_Vec3>()},
    {::_pbi::TcParser::GetTable<::click::protobuf::SensorMessage_Vec3>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SensorMessage_Sensor::Clear() {
// @@protoc_insertion_point(message_clear_start:click.protobuf.SensorMessage.Sensor)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SensorMessage_Sensor::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:click.protobuf.SensorMessage.Sensor)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (value_case()) {
    case kAngle: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          1, this->_internal_angle(), target);
      break;
    }
    case kAngularVelocity1D: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this->_internal_angularvelocity1d(), target);
      break;
    }
    case kTorque1D: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this->_internal_torque1d(), target);
      break;
    }
    case kPosition: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, *_impl_.value_.position_, _impl_.value_.position_->GetCachedSize(), target, stream);
      break;
    }
    case kRpy: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, *_impl_.value_.rpy_, _impl_.value_.rpy_->GetCachedSize(), target, stream);
      break;
    }
    case kActivated: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          6, this->_internal_activated(), target);
      break;
    }
    case kAcceleration3D: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          7, *_impl_.value_.acceleration3d_, _impl_.value_.acceleration3d_->GetCachedSize(), target, stream);
      break;
    }
    case kForce3D: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          8, *_impl_.value_.force3d_, _impl_.value_.force3d_->GetCachedSize(), target, stream);
      break;
    }
    case kTorque3D: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          9, *_impl_.value_.torque3d_, _impl_.value_.torque3d_->GetCachedSize(), target, stream);
      break;
    }
    case kAngularAcceleration3D: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          10, *_impl_.value_.angularacceleration3d_, _impl_.value_.angularacceleration3d_->GetCachedSize(), target, stream);
      break;
    }
    case kVelocity3D: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          12, *_impl_.value_.velocity3d_, _impl_.value_.velocity3d_->GetCachedSize(), target, stream);
      break;
    }
    case kAngularVelocity3D: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          13, *_impl_.value_.angularvelocity3d_, _impl_.value_.angularvelocity3d_->GetCachedSize(), target, stream);
      break;
    }
    case kForce1D: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          14, this->_internal_force1d(), target);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:click.protobuf.SensorMessage.Sensor)
  return target;
}

::size_t SensorMessage_Sensor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:click.protobuf.SensorMessage.Sensor)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (value_case()) {
    // double angle = 1;
    case kAngle: {
      total_size += 9;
      break;
    }
    // double angularVelocity1d = 2;
    case kAngularVelocity1D: {
      total_size += 9;
      break;
    }
    // double torque1d = 3;
    case kTorque1D: {
      total_size += 9;
      break;
    }
    // .click.protobuf.SensorMessage.Vec3 position = 4;
    case kPosition: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.value_.position_);
      break;
    }
    // .click.protobuf.SensorMessage.Vec3 rpy = 5;
    case kRpy: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.value_.rpy_);
      break;
    }
    // bool activated = 6;
    case kActivated: {
      total_size += 2;
      break;
    }
    // .click.protobuf.SensorMessage.Vec3 acceleration3d = 7;
    case kAcceleration3D: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.value_.acceleration3d_);
      break;
    }
    // .click.protobuf.SensorMessage.Vec3 force3d = 8;
    case kForce3D: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.value_.force3d_);
      break;
    }
    // .click.protobuf.SensorMessage.Vec3 torque3d = 9;
    case kTorque3D: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.value_.torque3d_);
      break;
    }
    // .click.protobuf.SensorMessage.Vec3 angularAcceleration3d = 10;
    case kAngularAcceleration3D: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.value_.angularacceleration3d_);
      break;
    }
    // .click.protobuf.SensorMessage.Vec3 velocity3d = 12;
    case kVelocity3D: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.value_.velocity3d_);
      break;
    }
    // .click.protobuf.SensorMessage.Vec3 angularVelocity3d = 13;
    case kAngularVelocity3D: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.value_.angularvelocity3d_);
      break;
    }
    // double force1d = 14;
    case kForce1D: {
      total_size += 9;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SensorMessage_Sensor::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SensorMessage_Sensor*>(&to_msg);
  auto& from = static_cast<const SensorMessage_Sensor&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:click.protobuf.SensorMessage.Sensor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_value();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kAngle: {
        _this->_impl_.value_.angle_ = from._impl_.value_.angle_;
        break;
      }
      case kAngularVelocity1D: {
        _this->_impl_.value_.angularvelocity1d_ = from._impl_.value_.angularvelocity1d_;
        break;
      }
      case kTorque1D: {
        _this->_impl_.value_.torque1d_ = from._impl_.value_.torque1d_;
        break;
      }
      case kPosition: {
        if (oneof_needs_init) {
          _this->_impl_.value_.position_ =
              ::google::protobuf::Message::CopyConstruct<::click::protobuf::SensorMessage_Vec3>(arena, *from._impl_.value_.position_);
        } else {
          _this->_impl_.value_.position_->MergeFrom(from._internal_position());
        }
        break;
      }
      case kRpy: {
        if (oneof_needs_init) {
          _this->_impl_.value_.rpy_ =
              ::google::protobuf::Message::CopyConstruct<::click::protobuf::SensorMessage_Vec3>(arena, *from._impl_.value_.rpy_);
        } else {
          _this->_impl_.value_.rpy_->MergeFrom(from._internal_rpy());
        }
        break;
      }
      case kActivated: {
        _this->_impl_.value_.activated_ = from._impl_.value_.activated_;
        break;
      }
      case kAcceleration3D: {
        if (oneof_needs_init) {
          _this->_impl_.value_.acceleration3d_ =
              ::google::protobuf::Message::CopyConstruct<::click::protobuf::SensorMessage_Vec3>(arena, *from._impl_.value_.acceleration3d_);
        } else {
          _this->_impl_.value_.acceleration3d_->MergeFrom(from._internal_acceleration3d());
        }
        break;
      }
      case kForce3D: {
        if (oneof_needs_init) {
          _this->_impl_.value_.force3d_ =
              ::google::protobuf::Message::CopyConstruct<::click::protobuf::SensorMessage_Vec3>(arena, *from._impl_.value_.force3d_);
        } else {
          _this->_impl_.value_.force3d_->MergeFrom(from._internal_force3d());
        }
        break;
      }
      case kTorque3D: {
        if (oneof_needs_init) {
          _this->_impl_.value_.torque3d_ =
              ::google::protobuf::Message::CopyConstruct<::click::protobuf::SensorMessage_Vec3>(arena, *from._impl_.value_.torque3d_);
        } else {
          _this->_impl_.value_.torque3d_->MergeFrom(from._internal_torque3d());
        }
        break;
      }
      case kAngularAcceleration3D: {
        if (oneof_needs_init) {
          _this->_impl_.value_.angularacceleration3d_ =
              ::google::protobuf::Message::CopyConstruct<::click::protobuf::SensorMessage_Vec3>(arena, *from._impl_.value_.angularacceleration3d_);
        } else {
          _this->_impl_.value_.angularacceleration3d_->MergeFrom(from._internal_angularacceleration3d());
        }
        break;
      }
      case kVelocity3D: {
        if (oneof_needs_init) {
          _this->_impl_.value_.velocity3d_ =
              ::google::protobuf::Message::CopyConstruct<::click::protobuf::SensorMessage_Vec3>(arena, *from._impl_.value_.velocity3d_);
        } else {
          _this->_impl_.value_.velocity3d_->MergeFrom(from._internal_velocity3d());
        }
        break;
      }
      case kAngularVelocity3D: {
        if (oneof_needs_init) {
          _this->_impl_.value_.angularvelocity3d_ =
              ::google::protobuf::Message::CopyConstruct<::click::protobuf::SensorMessage_Vec3>(arena, *from._impl_.value_.angularvelocity3d_);
        } else {
          _this->_impl_.value_.angularvelocity3d_->MergeFrom(from._internal_angularvelocity3d());
        }
        break;
      }
      case kForce1D: {
        _this->_impl_.value_.force1d_ = from._impl_.value_.force1d_;
        break;
      }
      case VALUE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorMessage_Sensor::CopyFrom(const SensorMessage_Sensor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:click.protobuf.SensorMessage.Sensor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SensorMessage_Sensor::InternalSwap(SensorMessage_Sensor* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.value_, other->_impl_.value_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata SensorMessage_Sensor::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SensorMessage_Sensors::_Internal {
 public:
};

SensorMessage_Sensors::SensorMessage_Sensors(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:click.protobuf.SensorMessage.Sensors)
}
inline PROTOBUF_NDEBUG_INLINE SensorMessage_Sensors::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::click::protobuf::SensorMessage_Sensors& from_msg)
      : sensor_{visibility, arena, from.sensor_},
        _cached_size_{0} {}

SensorMessage_Sensors::SensorMessage_Sensors(
    ::google::protobuf::Arena* arena,
    const SensorMessage_Sensors& from)
    : ::google::protobuf::Message(arena) {
  SensorMessage_Sensors* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:click.protobuf.SensorMessage.Sensors)
}
inline PROTOBUF_NDEBUG_INLINE SensorMessage_Sensors::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : sensor_{visibility, arena},
        _cached_size_{0} {}

inline void SensorMessage_Sensors::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SensorMessage_Sensors::~SensorMessage_Sensors() {
  // @@protoc_insertion_point(destructor:click.protobuf.SensorMessage.Sensors)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SensorMessage_Sensors::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SensorMessage_Sensors::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SensorMessage_Sensors, _impl_._cached_size_),
              false,
          },
          &SensorMessage_Sensors::MergeImpl,
          &SensorMessage_Sensors::kDescriptorMethods,
          &descriptor_table_Messaging_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SensorMessage_Sensors::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SensorMessage_Sensors_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::click::protobuf::SensorMessage_Sensors>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .click.protobuf.SensorMessage.Sensor sensor = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SensorMessage_Sensors, _impl_.sensor_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .click.protobuf.SensorMessage.Sensor sensor = 1;
    {PROTOBUF_FIELD_OFFSET(SensorMessage_Sensors, _impl_.sensor_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::click::protobuf::SensorMessage_Sensor>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SensorMessage_Sensors::Clear() {
// @@protoc_insertion_point(message_clear_start:click.protobuf.SensorMessage.Sensors)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sensor_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SensorMessage_Sensors::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:click.protobuf.SensorMessage.Sensors)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .click.protobuf.SensorMessage.Sensor sensor = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_sensor_size());
       i < n; i++) {
    const auto& repfield = this->_internal_sensor().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:click.protobuf.SensorMessage.Sensors)
  return target;
}

::size_t SensorMessage_Sensors::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:click.protobuf.SensorMessage.Sensors)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .click.protobuf.SensorMessage.Sensor sensor = 1;
  total_size += 1UL * this->_internal_sensor_size();
  for (const auto& msg : this->_internal_sensor()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SensorMessage_Sensors::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SensorMessage_Sensors*>(&to_msg);
  auto& from = static_cast<const SensorMessage_Sensors&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:click.protobuf.SensorMessage.Sensors)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_sensor()->MergeFrom(
      from._internal_sensor());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorMessage_Sensors::CopyFrom(const SensorMessage_Sensors& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:click.protobuf.SensorMessage.Sensors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SensorMessage_Sensors::InternalSwap(SensorMessage_Sensors* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.sensor_.InternalSwap(&other->_impl_.sensor_);
}

::google::protobuf::Metadata SensorMessage_Sensors::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

SensorMessage_Object_SensorsEntry_DoNotUse::SensorMessage_Object_SensorsEntry_DoNotUse() {}
SensorMessage_Object_SensorsEntry_DoNotUse::SensorMessage_Object_SensorsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
const ::google::protobuf::MessageLite::ClassData*
SensorMessage_Object_SensorsEntry_DoNotUse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // tc_table
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SensorMessage_Object_SensorsEntry_DoNotUse, _cached_size_),
              false,
          },
          &SensorMessage_Object_SensorsEntry_DoNotUse::MergeImpl,
          &SensorMessage_Object_SensorsEntry_DoNotUse::kDescriptorMethods,
          &descriptor_table_Messaging_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
// ===================================================================

class SensorMessage_Object::_Internal {
 public:
};

SensorMessage_Object::SensorMessage_Object(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:click.protobuf.SensorMessage.Object)
}
inline PROTOBUF_NDEBUG_INLINE SensorMessage_Object::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::click::protobuf::SensorMessage_Object& from_msg)
      : anglesensors_{visibility, arena, from.anglesensors_},
        angularvelocitysensors_{visibility, arena, from.angularvelocitysensors_},
        torquesensors_{visibility, arena, from.torquesensors_},
        objectsensors_{visibility, arena, from.objectsensors_},
        forcesensors_{visibility, arena, from.forcesensors_},
        sensors_{visibility, arena, from.sensors_},
        _cached_size_{0} {}

SensorMessage_Object::SensorMessage_Object(
    ::google::protobuf::Arena* arena,
    const SensorMessage_Object& from)
    : ::google::protobuf::Message(arena) {
  SensorMessage_Object* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:click.protobuf.SensorMessage.Object)
}
inline PROTOBUF_NDEBUG_INLINE SensorMessage_Object::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : anglesensors_{visibility, arena},
        angularvelocitysensors_{visibility, arena},
        torquesensors_{visibility, arena},
        objectsensors_{visibility, arena},
        forcesensors_{visibility, arena},
        sensors_{visibility, arena},
        _cached_size_{0} {}

inline void SensorMessage_Object::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SensorMessage_Object::~SensorMessage_Object() {
  // @@protoc_insertion_point(destructor:click.protobuf.SensorMessage.Object)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SensorMessage_Object::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SensorMessage_Object::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SensorMessage_Object, _impl_._cached_size_),
              false,
          },
          &SensorMessage_Object::MergeImpl,
          &SensorMessage_Object::kDescriptorMethods,
          &descriptor_table_Messaging_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 4, 51, 2> SensorMessage_Object::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SensorMessage_Object_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::click::protobuf::SensorMessage_Object>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated double angleSensors = 1;
    {::_pbi::TcParser::FastF64P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SensorMessage_Object, _impl_.anglesensors_)}},
    // repeated double angularVelocitySensors = 2;
    {::_pbi::TcParser::FastF64P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SensorMessage_Object, _impl_.angularvelocitysensors_)}},
    // repeated double torqueSensors = 3;
    {::_pbi::TcParser::FastF64P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SensorMessage_Object, _impl_.torquesensors_)}},
    // repeated .click.protobuf.SensorMessage.Sensor objectSensors = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(SensorMessage_Object, _impl_.objectsensors_)}},
    // repeated .click.protobuf.SensorMessage.Vec3 forceSensors = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 1, PROTOBUF_FIELD_OFFSET(SensorMessage_Object, _impl_.forcesensors_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated double angleSensors = 1;
    {PROTOBUF_FIELD_OFFSET(SensorMessage_Object, _impl_.anglesensors_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated double angularVelocitySensors = 2;
    {PROTOBUF_FIELD_OFFSET(SensorMessage_Object, _impl_.angularvelocitysensors_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated double torqueSensors = 3;
    {PROTOBUF_FIELD_OFFSET(SensorMessage_Object, _impl_.torquesensors_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated .click.protobuf.SensorMessage.Sensor objectSensors = 4;
    {PROTOBUF_FIELD_OFFSET(SensorMessage_Object, _impl_.objectsensors_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .click.protobuf.SensorMessage.Vec3 forceSensors = 5;
    {PROTOBUF_FIELD_OFFSET(SensorMessage_Object, _impl_.forcesensors_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, .click.protobuf.SensorMessage.Sensors> sensors = 6;
    {PROTOBUF_FIELD_OFFSET(SensorMessage_Object, _impl_.sensors_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetTable<::click::protobuf::SensorMessage_Sensor>()},
    {::_pbi::TcParser::GetTable<::click::protobuf::SensorMessage_Vec3>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(SensorMessage_Object()._impl_.sensors_)>(
        1, 0, 0, 9,
        11)},
    {::_pbi::TcParser::CreateInArenaStorageCb<::click::protobuf::SensorMessage_Sensors>},
  }}, {{
    "\43\0\0\0\0\0\7\0"
    "click.protobuf.SensorMessage.Object"
    "sensors"
  }},
};

PROTOBUF_NOINLINE void SensorMessage_Object::Clear() {
// @@protoc_insertion_point(message_clear_start:click.protobuf.SensorMessage.Object)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.anglesensors_.Clear();
  _impl_.angularvelocitysensors_.Clear();
  _impl_.torquesensors_.Clear();
  _impl_.objectsensors_.Clear();
  _impl_.forcesensors_.Clear();
  _impl_.sensors_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SensorMessage_Object::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:click.protobuf.SensorMessage.Object)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated double angleSensors = 1;
  if (this->_internal_anglesensors_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_anglesensors(), target);
  }

  // repeated double angularVelocitySensors = 2;
  if (this->_internal_angularvelocitysensors_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_angularvelocitysensors(), target);
  }

  // repeated double torqueSensors = 3;
  if (this->_internal_torquesensors_size() > 0) {
    target = stream->WriteFixedPacked(3, _internal_torquesensors(), target);
  }

  // repeated .click.protobuf.SensorMessage.Sensor objectSensors = 4;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_objectsensors_size());
       i < n; i++) {
    const auto& repfield = this->_internal_objectsensors().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .click.protobuf.SensorMessage.Vec3 forceSensors = 5;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_forcesensors_size());
       i < n; i++) {
    const auto& repfield = this->_internal_forcesensors().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // map<string, .click.protobuf.SensorMessage.Sensors> sensors = 6;
  if (!_internal_sensors().empty()) {
    using MapType = ::google::protobuf::Map<std::string, ::click::protobuf::SensorMessage_Sensors>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, ::click::protobuf::SensorMessage_Sensors,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>;
    const auto& field = _internal_sensors();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "click.protobuf.SensorMessage.Object.sensors");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "click.protobuf.SensorMessage.Object.sensors");
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:click.protobuf.SensorMessage.Object)
  return target;
}

::size_t SensorMessage_Object::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:click.protobuf.SensorMessage.Object)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated double angleSensors = 1;
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_anglesensors_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double angularVelocitySensors = 2;
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_angularvelocitysensors_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double torqueSensors = 3;
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_torquesensors_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated .click.protobuf.SensorMessage.Sensor objectSensors = 4;
  total_size += 1UL * this->_internal_objectsensors_size();
  for (const auto& msg : this->_internal_objectsensors()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .click.protobuf.SensorMessage.Vec3 forceSensors = 5;
  total_size += 1UL * this->_internal_forcesensors_size();
  for (const auto& msg : this->_internal_forcesensors()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // map<string, .click.protobuf.SensorMessage.Sensors> sensors = 6;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_sensors_size());
  for (const auto& entry : _internal_sensors()) {
    total_size += _pbi::MapEntryFuncs<std::string, ::click::protobuf::SensorMessage_Sensors,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SensorMessage_Object::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SensorMessage_Object*>(&to_msg);
  auto& from = static_cast<const SensorMessage_Object&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:click.protobuf.SensorMessage.Object)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_anglesensors()->MergeFrom(from._internal_anglesensors());
  _this->_internal_mutable_angularvelocitysensors()->MergeFrom(from._internal_angularvelocitysensors());
  _this->_internal_mutable_torquesensors()->MergeFrom(from._internal_torquesensors());
  _this->_internal_mutable_objectsensors()->MergeFrom(
      from._internal_objectsensors());
  _this->_internal_mutable_forcesensors()->MergeFrom(
      from._internal_forcesensors());
  _this->_impl_.sensors_.MergeFrom(from._impl_.sensors_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorMessage_Object::CopyFrom(const SensorMessage_Object& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:click.protobuf.SensorMessage.Object)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SensorMessage_Object::InternalSwap(SensorMessage_Object* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.anglesensors_.InternalSwap(&other->_impl_.anglesensors_);
  _impl_.angularvelocitysensors_.InternalSwap(&other->_impl_.angularvelocitysensors_);
  _impl_.torquesensors_.InternalSwap(&other->_impl_.torquesensors_);
  _impl_.objectsensors_.InternalSwap(&other->_impl_.objectsensors_);
  _impl_.forcesensors_.InternalSwap(&other->_impl_.forcesensors_);
  _impl_.sensors_.InternalSwap(&other->_impl_.sensors_);
}

::google::protobuf::Metadata SensorMessage_Object::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SensorMessage_SimulationVariables::_Internal {
 public:
};

SensorMessage_SimulationVariables::SensorMessage_SimulationVariables(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:click.protobuf.SensorMessage.SimulationVariables)
}
SensorMessage_SimulationVariables::SensorMessage_SimulationVariables(
    ::google::protobuf::Arena* arena, const SensorMessage_SimulationVariables& from)
    : SensorMessage_SimulationVariables(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SensorMessage_SimulationVariables::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SensorMessage_SimulationVariables::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.simulatedtime_ = {};
}
SensorMessage_SimulationVariables::~SensorMessage_SimulationVariables() {
  // @@protoc_insertion_point(destructor:click.protobuf.SensorMessage.SimulationVariables)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SensorMessage_SimulationVariables::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SensorMessage_SimulationVariables::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SensorMessage_SimulationVariables, _impl_._cached_size_),
              false,
          },
          &SensorMessage_SimulationVariables::MergeImpl,
          &SensorMessage_SimulationVariables::kDescriptorMethods,
          &descriptor_table_Messaging_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SensorMessage_SimulationVariables::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SensorMessage_SimulationVariables_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::click::protobuf::SensorMessage_SimulationVariables>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double simulatedTime = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(SensorMessage_SimulationVariables, _impl_.simulatedtime_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double simulatedTime = 1;
    {PROTOBUF_FIELD_OFFSET(SensorMessage_SimulationVariables, _impl_.simulatedtime_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SensorMessage_SimulationVariables::Clear() {
// @@protoc_insertion_point(message_clear_start:click.protobuf.SensorMessage.SimulationVariables)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.simulatedtime_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SensorMessage_SimulationVariables::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:click.protobuf.SensorMessage.SimulationVariables)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double simulatedTime = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_simulatedtime = this->_internal_simulatedtime();
  ::uint64_t raw_simulatedtime;
  memcpy(&raw_simulatedtime, &tmp_simulatedtime, sizeof(tmp_simulatedtime));
  if (raw_simulatedtime != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_simulatedtime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:click.protobuf.SensorMessage.SimulationVariables)
  return target;
}

::size_t SensorMessage_SimulationVariables::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:click.protobuf.SensorMessage.SimulationVariables)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double simulatedTime = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_simulatedtime = this->_internal_simulatedtime();
  ::uint64_t raw_simulatedtime;
  memcpy(&raw_simulatedtime, &tmp_simulatedtime, sizeof(tmp_simulatedtime));
  if (raw_simulatedtime != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SensorMessage_SimulationVariables::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SensorMessage_SimulationVariables*>(&to_msg);
  auto& from = static_cast<const SensorMessage_SimulationVariables&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:click.protobuf.SensorMessage.SimulationVariables)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_simulatedtime = from._internal_simulatedtime();
  ::uint64_t raw_simulatedtime;
  memcpy(&raw_simulatedtime, &tmp_simulatedtime, sizeof(tmp_simulatedtime));
  if (raw_simulatedtime != 0) {
    _this->_impl_.simulatedtime_ = from._impl_.simulatedtime_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorMessage_SimulationVariables::CopyFrom(const SensorMessage_SimulationVariables& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:click.protobuf.SensorMessage.SimulationVariables)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SensorMessage_SimulationVariables::InternalSwap(SensorMessage_SimulationVariables* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.simulatedtime_, other->_impl_.simulatedtime_);
}

::google::protobuf::Metadata SensorMessage_SimulationVariables::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

SensorMessage_ObjectsEntry_DoNotUse::SensorMessage_ObjectsEntry_DoNotUse() {}
SensorMessage_ObjectsEntry_DoNotUse::SensorMessage_ObjectsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
const ::google::protobuf::MessageLite::ClassData*
SensorMessage_ObjectsEntry_DoNotUse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // tc_table
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SensorMessage_ObjectsEntry_DoNotUse, _cached_size_),
              false,
          },
          &SensorMessage_ObjectsEntry_DoNotUse::MergeImpl,
          &SensorMessage_ObjectsEntry_DoNotUse::kDescriptorMethods,
          &descriptor_table_Messaging_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
// ===================================================================

class SensorMessage::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SensorMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SensorMessage, _impl_._has_bits_);
};

SensorMessage::SensorMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:click.protobuf.SensorMessage)
}
inline PROTOBUF_NDEBUG_INLINE SensorMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::click::protobuf::SensorMessage& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        objects_{visibility, arena, from.objects_} {}

SensorMessage::SensorMessage(
    ::google::protobuf::Arena* arena,
    const SensorMessage& from)
    : ::google::protobuf::Message(arena) {
  SensorMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.simvars_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::click::protobuf::SensorMessage_SimulationVariables>(
                              arena, *from._impl_.simvars_)
                        : nullptr;
  _impl_.messagetype_ = from._impl_.messagetype_;

  // @@protoc_insertion_point(copy_constructor:click.protobuf.SensorMessage)
}
inline PROTOBUF_NDEBUG_INLINE SensorMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        objects_{visibility, arena} {}

inline void SensorMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, simvars_),
           0,
           offsetof(Impl_, messagetype_) -
               offsetof(Impl_, simvars_) +
               sizeof(Impl_::messagetype_));
}
SensorMessage::~SensorMessage() {
  // @@protoc_insertion_point(destructor:click.protobuf.SensorMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SensorMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.simvars_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SensorMessage::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SensorMessage, _impl_._cached_size_),
              false,
          },
          &SensorMessage::MergeImpl,
          &SensorMessage::kDescriptorMethods,
          &descriptor_table_Messaging_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 3, 3, 44, 2> SensorMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SensorMessage, _impl_._has_bits_),
    0, // no _extensions_
    4, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967282,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SensorMessage_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::click::protobuf::SensorMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .click.protobuf.SensorMessage.SimulationVariables simVars = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(SensorMessage, _impl_.simvars_)}},
    // .click.protobuf.MessageType messageType = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorMessage, _impl_.messagetype_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SensorMessage, _impl_.messagetype_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .click.protobuf.MessageType messageType = 1;
    {PROTOBUF_FIELD_OFFSET(SensorMessage, _impl_.messagetype_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // map<string, .click.protobuf.SensorMessage.Object> objects = 3;
    {PROTOBUF_FIELD_OFFSET(SensorMessage, _impl_.objects_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // .click.protobuf.SensorMessage.SimulationVariables simVars = 4;
    {PROTOBUF_FIELD_OFFSET(SensorMessage, _impl_.simvars_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::click::protobuf::SensorMessage_SimulationVariables>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(SensorMessage()._impl_.objects_)>(
        1, 0, 0, 9,
        11)},
    {::_pbi::TcParser::CreateInArenaStorageCb<::click::protobuf::SensorMessage_Object>},
  }}, {{
    "\34\0\7\0\0\0\0\0"
    "click.protobuf.SensorMessage"
    "objects"
  }},
};

PROTOBUF_NOINLINE void SensorMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:click.protobuf.SensorMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.objects_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.simvars_ != nullptr);
    _impl_.simvars_->Clear();
  }
  _impl_.messagetype_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SensorMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:click.protobuf.SensorMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .click.protobuf.MessageType messageType = 1;
  if (this->_internal_messagetype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_messagetype(), target);
  }

  // map<string, .click.protobuf.SensorMessage.Object> objects = 3;
  if (!_internal_objects().empty()) {
    using MapType = ::google::protobuf::Map<std::string, ::click::protobuf::SensorMessage_Object>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, ::click::protobuf::SensorMessage_Object,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>;
    const auto& field = _internal_objects();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "click.protobuf.SensorMessage.objects");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "click.protobuf.SensorMessage.objects");
      }
    }
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .click.protobuf.SensorMessage.SimulationVariables simVars = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.simvars_, _impl_.simvars_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:click.protobuf.SensorMessage)
  return target;
}

::size_t SensorMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:click.protobuf.SensorMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // map<string, .click.protobuf.SensorMessage.Object> objects = 3;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_objects_size());
  for (const auto& entry : _internal_objects()) {
    total_size += _pbi::MapEntryFuncs<std::string, ::click::protobuf::SensorMessage_Object,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
  }
  // .click.protobuf.SensorMessage.SimulationVariables simVars = 4;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.simvars_);
  }

  // .click.protobuf.MessageType messageType = 1;
  if (this->_internal_messagetype() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_messagetype());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SensorMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SensorMessage*>(&to_msg);
  auto& from = static_cast<const SensorMessage&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:click.protobuf.SensorMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.objects_.MergeFrom(from._impl_.objects_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.simvars_ != nullptr);
    if (_this->_impl_.simvars_ == nullptr) {
      _this->_impl_.simvars_ =
          ::google::protobuf::Message::CopyConstruct<::click::protobuf::SensorMessage_SimulationVariables>(arena, *from._impl_.simvars_);
    } else {
      _this->_impl_.simvars_->MergeFrom(*from._impl_.simvars_);
    }
  }
  if (from._internal_messagetype() != 0) {
    _this->_impl_.messagetype_ = from._impl_.messagetype_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorMessage::CopyFrom(const SensorMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:click.protobuf.SensorMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SensorMessage::InternalSwap(SensorMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.objects_.InternalSwap(&other->_impl_.objects_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SensorMessage, _impl_.messagetype_)
      + sizeof(SensorMessage::_impl_.messagetype_)
      - PROTOBUF_FIELD_OFFSET(SensorMessage, _impl_.simvars_)>(
          reinterpret_cast<char*>(&_impl_.simvars_),
          reinterpret_cast<char*>(&other->_impl_.simvars_));
}

::google::protobuf::Metadata SensorMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ResetMessage::_Internal {
 public:
};

ResetMessage::ResetMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:click.protobuf.ResetMessage)
}
ResetMessage::ResetMessage(
    ::google::protobuf::Arena* arena, const ResetMessage& from)
    : ResetMessage(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ResetMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ResetMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.messagetype_ = {};
}
ResetMessage::~ResetMessage() {
  // @@protoc_insertion_point(destructor:click.protobuf.ResetMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ResetMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ResetMessage::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(ResetMessage, _impl_._cached_size_),
              false,
          },
          &ResetMessage::MergeImpl,
          &ResetMessage::kDescriptorMethods,
          &descriptor_table_Messaging_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ResetMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ResetMessage_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::click::protobuf::ResetMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .click.protobuf.MessageType messageType = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ResetMessage, _impl_.messagetype_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ResetMessage, _impl_.messagetype_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .click.protobuf.MessageType messageType = 1;
    {PROTOBUF_FIELD_OFFSET(ResetMessage, _impl_.messagetype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ResetMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:click.protobuf.ResetMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.messagetype_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* ResetMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:click.protobuf.ResetMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .click.protobuf.MessageType messageType = 1;
  if (this->_internal_messagetype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_messagetype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:click.protobuf.ResetMessage)
  return target;
}

::size_t ResetMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:click.protobuf.ResetMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .click.protobuf.MessageType messageType = 1;
  if (this->_internal_messagetype() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_messagetype());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ResetMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ResetMessage*>(&to_msg);
  auto& from = static_cast<const ResetMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:click.protobuf.ResetMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_messagetype() != 0) {
    _this->_impl_.messagetype_ = from._impl_.messagetype_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ResetMessage::CopyFrom(const ResetMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:click.protobuf.ResetMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ResetMessage::InternalSwap(ResetMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.messagetype_, other->_impl_.messagetype_);
}

::google::protobuf::Metadata ResetMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ErrorMessage::_Internal {
 public:
};

ErrorMessage::ErrorMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:click.protobuf.ErrorMessage)
}
inline PROTOBUF_NDEBUG_INLINE ErrorMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::click::protobuf::ErrorMessage& from_msg)
      : errormessage_(arena, from.errormessage_),
        _cached_size_{0} {}

ErrorMessage::ErrorMessage(
    ::google::protobuf::Arena* arena,
    const ErrorMessage& from)
    : ::google::protobuf::Message(arena) {
  ErrorMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, messagetype_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, messagetype_),
           offsetof(Impl_, error_) -
               offsetof(Impl_, messagetype_) +
               sizeof(Impl_::error_));

  // @@protoc_insertion_point(copy_constructor:click.protobuf.ErrorMessage)
}
inline PROTOBUF_NDEBUG_INLINE ErrorMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : errormessage_(arena),
        _cached_size_{0} {}

inline void ErrorMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, messagetype_),
           0,
           offsetof(Impl_, error_) -
               offsetof(Impl_, messagetype_) +
               sizeof(Impl_::error_));
}
ErrorMessage::~ErrorMessage() {
  // @@protoc_insertion_point(destructor:click.protobuf.ErrorMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ErrorMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.errormessage_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ErrorMessage::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(ErrorMessage, _impl_._cached_size_),
              false,
          },
          &ErrorMessage::MergeImpl,
          &ErrorMessage::kDescriptorMethods,
          &descriptor_table_Messaging_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 48, 2> ErrorMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ErrorMessage_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::click::protobuf::ErrorMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .click.protobuf.MessageType messageType = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ErrorMessage, _impl_.messagetype_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ErrorMessage, _impl_.messagetype_)}},
    // .click.protobuf.ErrorType error = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ErrorMessage, _impl_.error_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ErrorMessage, _impl_.error_)}},
    // string errormessage = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ErrorMessage, _impl_.errormessage_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .click.protobuf.MessageType messageType = 1;
    {PROTOBUF_FIELD_OFFSET(ErrorMessage, _impl_.messagetype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .click.protobuf.ErrorType error = 2;
    {PROTOBUF_FIELD_OFFSET(ErrorMessage, _impl_.error_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string errormessage = 3;
    {PROTOBUF_FIELD_OFFSET(ErrorMessage, _impl_.errormessage_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\0\0\14\0\0\0\0"
    "click.protobuf.ErrorMessage"
    "errormessage"
  }},
};

PROTOBUF_NOINLINE void ErrorMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:click.protobuf.ErrorMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.errormessage_.ClearToEmpty();
  ::memset(&_impl_.messagetype_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.error_) -
      reinterpret_cast<char*>(&_impl_.messagetype_)) + sizeof(_impl_.error_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* ErrorMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:click.protobuf.ErrorMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .click.protobuf.MessageType messageType = 1;
  if (this->_internal_messagetype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_messagetype(), target);
  }

  // .click.protobuf.ErrorType error = 2;
  if (this->_internal_error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_error(), target);
  }

  // string errormessage = 3;
  if (!this->_internal_errormessage().empty()) {
    const std::string& _s = this->_internal_errormessage();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "click.protobuf.ErrorMessage.errormessage");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:click.protobuf.ErrorMessage)
  return target;
}

::size_t ErrorMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:click.protobuf.ErrorMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string errormessage = 3;
  if (!this->_internal_errormessage().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_errormessage());
  }

  // .click.protobuf.MessageType messageType = 1;
  if (this->_internal_messagetype() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_messagetype());
  }

  // .click.protobuf.ErrorType error = 2;
  if (this->_internal_error() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_error());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ErrorMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ErrorMessage*>(&to_msg);
  auto& from = static_cast<const ErrorMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:click.protobuf.ErrorMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_errormessage().empty()) {
    _this->_internal_set_errormessage(from._internal_errormessage());
  }
  if (from._internal_messagetype() != 0) {
    _this->_impl_.messagetype_ = from._impl_.messagetype_;
  }
  if (from._internal_error() != 0) {
    _this->_impl_.error_ = from._impl_.error_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ErrorMessage::CopyFrom(const ErrorMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:click.protobuf.ErrorMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ErrorMessage::InternalSwap(ErrorMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.errormessage_, &other->_impl_.errormessage_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ErrorMessage, _impl_.error_)
      + sizeof(ErrorMessage::_impl_.error_)
      - PROTOBUF_FIELD_OFFSET(ErrorMessage, _impl_.messagetype_)>(
          reinterpret_cast<char*>(&_impl_.messagetype_),
          reinterpret_cast<char*>(&other->_impl_.messagetype_));
}

::google::protobuf::Metadata ErrorMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
}  // namespace click
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_Messaging_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
