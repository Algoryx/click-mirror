0.2.0
- Adds all missing types for Sensor to SensorMessageBuilder.

0.1.42
- Bugfix: Disable ExampleApplication graphics throttling introduced in AGX 2.36.1.5 since click_application drives graphics

0.1.40
- Bugfix: Release Docker license when stopping application

0.1.39
- Conan packages created and uploaded in CI

0.1.38
- C++ Server supports inheritance
- C++ Server supports must_send(), must_recv()
- C++ ControlMessage supports has_object() and values()

0.1.37
- No changes

0.1.36
- Add C++ demoserver
- Rename packages and modules according to PEP8, i.e pClick is now pclick. agxClick is now agxclick.
- First version to be available from http://pypi.org

0.1.35
- Remove sleep in democlient.cpp for windows builds to increase speed a lot on Windows which has low resolution sleep (~10 ms) only.
- Specify units for control signals in the demo client.
- Performance audit: Add --trace-sizes to click_application that prints package sizes whenever they change
- Performance audit: Add cmdline parameters to democlient.cpp, --trace, --timings, --addr, --range, --blocking-receive added.
- Update protobuf version to 3.21.9
- Clear error message on server when client sends unknown robot name
- Still using AGXBrick 0.5.7 or later

0.1.34
- Add terminate() to Client and documentation for when "WSASTARTUP not yet performed" assertion occurs.
- Add --addr flag to ClickApplication to enable using ipc or different port than default one(5555). 

0.1.33
- Add retrieval of simulated time to SensorMessage API

0.1.32
- Implemented support for multiple input signal values, i.e. Torque in one joint and Angles on another.
- Deprecation warning on use of Control Type per scene in favor of Control Type per joint (C++ and python)
- Deprecation warning on use of withAngles(), withAngleVelocities() and withTorques() in favor of withValues() (C++)

0.1.31
- DemoServer reacts to Ctrl-Break.

0.1.30
- Require AGXBrick 0.5.7 or later
- agxclick support Brick.Signals ComponentBoolInput and ComponentBoolOutput

0.1.29
- Require AGXBrick 0.5.4 or later.
- agxclick support Brick.Signals RotatingBodyAngleOutput, RotatingBodyVelocityOutput and FixedVelocityEngineTorqueOutput.
- Client input events come in to agxclick as early as possible.
- agxclick output events come in as late as possible.

0.1.28
- Add controlType retrieval to C++ HandshakeMessage API
- When the ResetBatchListener is used, a reset call will also step to the next batch configuration

0.1.27
- Add compatibility with AGX versions where ExampleApplication does not support websockets.

0.1.26
- Reset from Keybaord will send ResetMessage immediately if possible to prevent recv fail
- --batch <seconds> will restart simulation from the initial position(s) continously. See agxclick/README.md.

0.1.25
- Bugfix: Sends ResetMessage before SimulationStep, i.e. fixes the "bug" that stepped once between Reset and sending ResetMessage
- Aborts Reset on HandshakeInit, so that reattached controllers does not get ResetMessage as first reply to HandshakeInit
- Bugfix: Handshake now sends TorqueSensor as Torque Valuetype

0.1.24
- Implemented separate simulation and graphics frequency to improve performance in agxViewer. Enable with --framerate
- Added performance and profiling sections to agxclick README.

0.1.23
- Enabled profiling with --profile
- Minor performance increase (3%)
- Fix bug that updates robots btw reset and resetmessage to solve reset problem with --disableClickSync

0.1.22
- Support for multiple arms in one robot.
- Bugfix example application wrt absolute windows paths to model
- Add --disableClickSync which disables control message sync

0.1.21
- Fix Remove uncached Brick import

0.1.20
- C++ API supports SimulationSettings in HandshakeMessage

0.1.19
- agxclick supports grouping several signals into one sensor if they have the same protocolReference.

0.1.18
- agxclick support Brick.Physics.DriveTrain Signals.
- Minimum version of agxBrick required is 0.4.68.

0.1.17
- agxclick uses Sensor name as Click identifier, see agxclick/README.md

0.1.16
- agxclick finds one JointForce3DSensor and one JointTorque3DSensor per robot, and adds them to HandshakeMessage and SensorMessage
